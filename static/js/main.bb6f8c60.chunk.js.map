{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","pages/home/home.module.css","components/app-header/app-header.module.css","components/app-header/app-header.tsx","utils/hooks.ts","components/burger-ingredients/burger-ingredients.tsx","images/done.png","images/loading.svg","components/loading/loading.tsx","components/error/error.tsx","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","utils/baseUrl.ts","utils/cookie.ts","utils/api.ts","services/constants/order-constructor.ts","services/constants/modal.ts","services/actions/modal.ts","services/actions/constructor.ts","components/burger-constructor/burger-constructor.tsx","pages/home/home.tsx","services/constants/auth.ts","services/actions/auth.ts","pages/login/login.tsx","pages/registration/registration.tsx","pages/reset-password/reset-password.tsx","components/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","pages/forgot-password/forgot-password.tsx","components/profile-nav/profile-nav.tsx","components/order-info/order-info.tsx","services/constants/webSocket.ts","services/actions/webSocket.ts","pages/profile/profile.tsx","services/constants/ingredients.ts","pages/feed/feed-page.tsx","services/constants/feed.ts","components/order-info-details/order-info-details.tsx","services/actions/feed.ts","components/app/app.tsx","services/wsSocketMiddleware.ts","services/actions/ingredients.ts","services/reducers/constructor/order-constructor.ts","services/reducers/auth/auth.ts","services/reducers/feed/feed.ts","services/reducers/ws/wsState.ts","services/reducers/modal/modal.ts","services/reducers/burger/burger.ts","services/reducers/index.ts","index.tsx","components/order-info/order-info.module.css","pages/feed/feed-page.module.css","components/order-info-details/order-info-details.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-constructor/burger-constructor.module.css","components/profile-nav/profile-nav.module.css","components/modal/modal.module.css","pages/login/login.module.css","components/ingredient-details/ingredient-details.module.css","pages/profile/profile.module.css","components/loading/loading.module.css","pages/registration/registration.module.css","pages/reset-password/reset-password.module.css","pages/forgot-password/forgot-password.module.css","components/order-details/order-details.module.css"],"names":["module","exports","AppHeader","isMainPageActive","useRouteMatch","path","exact","isHistoryOrderPageActive","isProfilePageActive","className","styles","appHeaderWrapper","appHeaderNavigation","clsx","ulLeft","ul","to","activeClassName","active","li","type","logo","ulRight","React","memo","useSelector","selectorHook","useDispatch","dispatchHook","DraggableCard","item","content","state","order","count","useMemo","unique","map","data","find","value","ingredient","_id","push","filter","length","useDrag","dragRef","history","useHistory","location","useLocation","ingredientsSectionContainer","onClick","pathname","background","ref","ingredientSelected","name","countSelectedItem","size","src","image","alt","ingredientsSectionP","ingredientsSectionImage","price","IngredientsSection","forwardRef","props","ingredientsSectionCaption","caption","ingredientsSectionWrapper","ingredients","BurgerIngredients","burgerData","burgerIngredient","bunArray","sauceArray","mainArray","useState","current","setCurrent","refBun","useRef","refSauce","refMain","scrollTo","scrollIntoView","TabChoose","tab","section","menuContainer","onScroll","e","preventDefault","Math","abs","target","scrollTop","offsetTop","Loading","loadingWindow","LoadingIconPath","loadingIcon","Error","OrderDetails","orderRequest","orderFailed","detailsContainer","orderNumber","doneImagePath","ModalOverlay","overlay","onClose","modalRoot","document","getElementById","Modal","handleClose","useCallback","escClose","event","key","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","Fragment","modal","modalHeader","modalCloseIconAlign","children","BaseUrl","authUrl","ordersBaseUrl","getCookie","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","checkResponse","response","ok","getBurgerData","fetch","json","getOrderInfo","number","url","toString","createOrder","requestData","method","mode","cache","credentials","headers","Authorization","body","JSON","stringify","userAuth","form","redirect","referrerPolicy","sendEmail","updatePassword","updateToken","token","getUserInfo","then","res","success","refreshToken","accessToken","split","catch","updateUserInfo","logOut","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_ERROR","DELETE_INGREDIENT","DELETE_ORDER","ADD_INGREDIENT","REPLACE_BUN","REORDER","DEFAULT","SET_VISIBLE","DELETE_VISIBLE","SET_TYPE","DELETE_TYPE","openModal","dispatch","typeModal","hoverIndex","useDrop","accept","drop","itemDrag","from","hover","dropTarget","container","itemCard","text","thumbnail","id","BurgerConstructor","bun","finalCost","reduce","prev","next","isVisible","IngredientSection","sort","a","b","now","random","substr","collect","monitor","isHover","isOver","isAuth","user","needShowDrop","canDrop","isLocked","finalContainer","disabled","HomePage","isIngredientsLoading","isIngredientsFailed","mainSection","DndProvider","backend","HTML5Backend","USER_REQUEST_LOADING","USER_REQUEST_ERROR","USER_UPDATE_REQUEST_ERROR","USER_LOGOUT_REQUEST_ERROR","USER_REQUEST_SUCCESS","USER_LOGOUT_REQUEST_SUCCESS","EMAIL_REQUEST","EMAIL_SUCCESS","EMAIL_ERROR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","enter","getUser","LoginPage","email","password","setValue","onChange","login","wrapper","onSubmit","header","htmlType","link","RegistrationPage","register","placeholder","PasswordResetPage","resetPassword","isRequestLoading","isRequestFailed","isPasswordReset","canGoToNextStep","reset","emailHasChecked","icon","LoginRedirect","MainPageRedirect","ProtectedRoute","isForAuthUser","rest","isUserLoading","renderComponent","render","IngredientDetails","useParams","image_large","caloriesInfoContainer","infoP","calories","proteins","fat","carbohydrates","ForgotPasswordPage","isEmailSend","resetPasswordEmail","ProfileNav","username","logoutUser","linkBlock","OrderInfoCard","IsShowStatus","orderReverse","ingredientsLeft","slice","reverse","sum","status","card","cardInfo","createdAt","toLocaleString","statusDone","ingredientsWrapper","ingredientsImageRowContainer","index","scr","ingredientInOrder","image_mobile","ingredientImageWrapper","ingredientTransformImageWrapper","ingredientImageFirstCounter","ingredientImage","ingredientsLeftCounter","uuid","ingredientsInfoWrapper","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","wsConnectionStart","payload","wsConnectionClosed","ProfileData","initialState","update","updateInfo","submitContainer","cancel","ProfileOrders","messages","wsReducer","lastMessage","orders","feedPageOrdersWrapper","ProfilePage","isFeedOrders","innerText","sectionWrapper","INGREDIENTS_REQUEST","INGREDIENTS_SUCCESS","INGREDIENTS_ERROR","FeedPage","total","totalToday","pending","ready","needBigContainerPending","needBigContainerReady","feedPage","feedPageContainer","feedPageOrderStatusWrapper","feedPageStatusContainer","feedPageStatusContainerBig","numberColor","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_ERROR","OrderInfoDetails","orderSelected","feed","allIngredientsInOrder","uniqueIngredientsInOrder","statusColor","ingredientInfoContainerWrapper","ingredientInfoContainer","infoSum","infoCreateAnsSum","Main","matchProfile","params","matchFeed","goBack","modalCenter","modalCenterOrderInfo","App","wsActions","isUserRequestFailed","items","initialStateOrder","initialStateUser","initialStateResetPassword","isLoading","isError","wsConnected","initialStateModal","rootReducer","combineReducers","action","arr","indexFrom","findIndex","wsInit","wsSendMessage","onOpen","onError","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","socket","WebSocket","onopen","onerror","onmessage","parsedData","parse","restParsedData","onclose","message","send","createStore","root"],"mappings":"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","file":"static/js/main.bb6f8c60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__2Sv-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"home_mainSection__3EQIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeaderWrapper\":\"app-header_appHeaderWrapper__23r-H\",\"appHeaderNavigation\":\"app-header_appHeaderNavigation__2dWmD\",\"ul\":\"app-header_ul__302l9\",\"li\":\"app-header_li__3HEMH\",\"logo\":\"app-header_logo__1Ve0i\",\"ulLeft\":\"app-header_ulLeft__2Kkk4\",\"ulRight\":\"app-header_ulRight__3yJaH\",\"active\":\"app-header_active__2WunB\"};","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport styles from \"./app-header.module.css\";\r\nimport {BurgerIcon, ListIcon, ProfileIcon, Logo} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useRouteMatch} from 'react-router-dom';\r\n\r\n\r\nfunction AppHeader() {\r\n    /** Получение данных об активной странице */\r\n    const isMainPageActive: boolean = !!useRouteMatch({\r\n        path: \"/\",\r\n        exact: true,\r\n    });\r\n    const isHistoryOrderPageActive: boolean = !!useRouteMatch(\"/feed\");\r\n    const isProfilePageActive: boolean = !!useRouteMatch(\"/profile\");\r\n\r\n    return (\r\n        <header className={styles.appHeaderWrapper}>\r\n            <nav className={styles.appHeaderNavigation}>\r\n                <ul className={clsx(\"mt-4 mb-4 pt-4 pb-4\", styles.ulLeft, styles.ul)}>\r\n                    <NavLink to={'/'}\r\n                             exact={true}\r\n                             activeClassName={styles.active}\r\n                             className={clsx(styles.li, \"text_type_main-default mr-2 pl-5 pr-5 text_color_inactive\")}\r\n                    >\r\n                        <BurgerIcon type={isMainPageActive ? \"primary\" : \"secondary\"}/>\r\n                        <span className=\"pl-2\">Конструктор</span>\r\n                    </NavLink>\r\n                    <NavLink to={'/feed'}\r\n                             exact={true}\r\n                             activeClassName={styles.active}\r\n                             className={clsx(styles.li, \"text_type_main-default pl-5 pr-5 text_color_inactive\")}\r\n                    >\r\n                        <ListIcon type={isHistoryOrderPageActive ? \"primary\" : \"secondary\"}/>\r\n                        <span className=\"pl-2\">Лента заказов</span>\r\n                    </NavLink>\r\n                </ul>\r\n                <div className={clsx(\"mt-4 mb-4\", styles.logo)}><Logo/></div>\r\n                <ul className={clsx(\"mt-4\", \"mb-4\", \"pt-4\", \"pb-4\", styles.ulRight, styles.ul)}>\r\n                    <NavLink to={'/profile'}\r\n                             activeClassName={styles.active}\r\n                             className={clsx(styles.li, \"text_type_main-default pl-5 pr-5 text_color_inactive\")}\r\n                    >\r\n                        <ProfileIcon type={isProfilePageActive ? \"primary\" : \"secondary\"}/>\r\n                        <span className=\"pl-2\">Личный кабинет</span>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default React.memo(AppHeader);\r\n","import {\r\n    TypedUseSelectorHook,\r\n    useSelector as selectorHook,\r\n    useDispatch as dispatchHook,\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from '../index';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import React, {FC, useMemo, useRef} from \"react\";\r\nimport styles from './burger-ingredients.module.css';\r\nimport clsx from \"clsx\";\r\nimport {Tab, CurrencyIcon, Counter} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useSelector  } from \"../../utils/hooks\";\r\nimport {IIngredient} from \"../../utils/type\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {History, Location} from \"history\";\r\n\r\nexport interface IIngredientCard {\r\n    item: IIngredient,\r\n    count: number\r\n}\r\n\r\nconst DraggableCard: FC<{ item: IIngredient }> = ({item}) => {\r\n    /** Получение данных о выбранных ингредиентах и подсчет их количества*/\r\n    const content = useSelector(state => state.order.content);\r\n    const count: Array<IIngredientCard> = useMemo(() => {\r\n        const unique: Array<IIngredientCard> = [];\r\n        content.map((data) => {\r\n            if (!unique.find(value => data.ingredient._id === value.item._id)) {\r\n                unique.push({item: data.ingredient, count: content\r\n                        .filter(item => item.ingredient._id === data.ingredient._id).length});\r\n            }\r\n            return data;\r\n        });\r\n        return unique;\r\n    }, [content]);\r\n\r\n    const [, dragRef] = useDrag({\r\n        type: \"ingredients\",\r\n        item: item,\r\n    });\r\n    const history: History = useHistory();\r\n    const location: Location = useLocation();\r\n    const handleClick = (): void => {\r\n        history.push({\r\n            pathname: `/ingredients/${item._id}`,\r\n            state: { background: location },\r\n        });\r\n    }\r\n\r\n    const countSelectedItem = (item: IIngredient): number => {\r\n        const ingredientSelected: IIngredientCard | undefined = count.find(value => item.name === value.item.name);\r\n        if (ingredientSelected) {\r\n            return ingredientSelected.count;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(styles.ingredientsSectionContainer, \"mt-6\")}\r\n             onClick={handleClick} ref={dragRef}>\r\n            {\r\n                count.find(value => item._id === value.item._id) &&\r\n                <Counter count={countSelectedItem(item)} size=\"default\" />\r\n            }\r\n            <img src={item.image} alt={\"Карточка ингредиента\"} className=\"pr-4 pl-4\"/>\r\n            <p className={clsx(\"text_type_digits-default m-1\", styles.ingredientsSectionP,\r\n                styles.ingredientsSectionImage)}>\r\n                <span className=\"pr-2\">{item.price}</span><CurrencyIcon type=\"primary\" />\r\n            </p>\r\n            <p className={clsx(\"text_type_main-default mt-1\", styles.ingredientsSectionP)}>\r\n                {item.name}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst IngredientsSection = React.forwardRef<HTMLDivElement, IIngredientsSection>\r\n((props, ref) => {\r\n    return (\r\n        <>\r\n            <h2 className={clsx(styles.ingredientsSectionCaption, \"text_type_main-medium\")} ref={ref}>\r\n                {props.caption}\r\n            </h2>\r\n            <section className={clsx(styles.ingredientsSectionWrapper, 'mb-10 mr-2 ml-4')}>\r\n                {props.ingredients.map((item) => {\r\n                    return (\r\n                        <DraggableCard key={item._id} item={item}/>\r\n                    )\r\n                })}\r\n            </section>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nfunction BurgerIngredients() {\r\n    const burgerData = useSelector(state => state.burgerIngredient.ingredients);\r\n    /** Сохранение данных по разделам */\r\n    const bunArray: Array<IIngredient> = useMemo(() => {\r\n        return burgerData.filter(item => item.type === \"bun\");\r\n    }, [burgerData]);\r\n    const sauceArray: Array<IIngredient> = useMemo(() => {\r\n        return burgerData.filter(item => item.type === \"sauce\");\r\n    }, [burgerData]);\r\n    const mainArray: Array<IIngredient> = useMemo(() => {\r\n        return burgerData.filter(item => item.type === \"main\");\r\n    }, [burgerData]);\r\n\r\n    /** Табло навигации */\r\n    const [current, setCurrent] = React.useState('bun');\r\n    /** Изменение активной секции */\r\n    const refBun = useRef<HTMLDivElement>(null);\r\n    const refSauce = useRef<HTMLDivElement>(null);\r\n    const refMain = useRef<HTMLDivElement>(null);\r\n    const scrollPosition = (e: any) => {\r\n        e.preventDefault();\r\n        // Сеттим булочку, только есть разница меньше чем с соусами\r\n        if (refBun.current && refSauce.current && refMain.current){\r\n            if (Math.abs(e.target.scrollTop - refBun.current.offsetTop)\r\n                < Math.abs(e.target.scrollTop - refSauce.current.offsetTop)) {\r\n                setCurrent('bun');\r\n            }\r\n            // Сеттим соусы если разница меньше чем с булочкой и начинками\r\n            if ((Math.abs(e.target.scrollTop - refBun.current.offsetTop)\r\n                    > Math.abs(e.target.scrollTop - refSauce.current.offsetTop))\r\n                && (Math.abs(e.target.scrollTop - refSauce.current.offsetTop)\r\n                    < Math.abs(e.target.scrollTop - refMain.current.offsetTop))) {\r\n                setCurrent('sauce');\r\n            }\r\n            // Сеттим начинки, только есть разница меньше чем с соусами\r\n            if (Math.abs(e.target.scrollTop - refMain.current.offsetTop)\r\n                < Math.abs(e.target.scrollTop - refSauce.current.offsetTop)) {\r\n                setCurrent('main');\r\n            }\r\n        }\r\n    }\r\n\r\n    const scrollTo = (value: string): void => {\r\n        setCurrent(value);\r\n        switch (value) {\r\n            case \"bun\": {\r\n                if (refBun.current) {\r\n                    refBun.current.scrollIntoView();\r\n                }\r\n                break;\r\n            }\r\n            case \"sauce\": {\r\n                if (refSauce.current) {\r\n                    refSauce.current.scrollIntoView();\r\n                }\r\n                break;\r\n            }\r\n            case \"main\": {\r\n                if (refMain.current) {\r\n                    refMain.current.scrollIntoView();\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    const TabChoose = () => {\r\n        return (\r\n            <div className={clsx(styles.tab, \"mb-10\")}>\r\n                <Tab value=\"bun\" active={current === 'bun'} onClick={scrollTo}>\r\n                    Булки\r\n                </Tab>\r\n                <Tab value=\"sauce\" active={current === 'sauce'} onClick={scrollTo}>\r\n                    Соусы\r\n                </Tab>\r\n                <Tab value=\"main\" active={current === 'main'} onClick={scrollTo}>\r\n                    Начинки\r\n                </Tab>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className={clsx(styles.section, \"mr-10\")}>\r\n            <h1 className=\"text text_type_main-large pt-10 pb-5\">Соберите бургер</h1>\r\n            <TabChoose/>\r\n            <div className={styles.menuContainer} onScroll={scrollPosition}>\r\n                <IngredientsSection\r\n                    ingredients={bunArray}\r\n                    caption={\"Булки\"}\r\n                    ref={refBun}\r\n                />\r\n                <IngredientsSection\r\n                    ingredients={sauceArray}\r\n                    caption={\"Соусы\"}\r\n                    ref={refSauce}\r\n                />\r\n                <IngredientsSection\r\n                    ingredients={mainArray}\r\n                    caption={\"Начинки\"}\r\n                    ref={refMain}\r\n                />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default React.memo(BurgerIngredients);\r\n\r\ninterface IIngredientsSection {\r\n    ingredients: Array<IIngredient>;\r\n    caption: string\r\n}\r\n","export default __webpack_public_path__ + \"static/media/done.e036971b.png\";","export default __webpack_public_path__ + \"static/media/loading.b4aa4cad.svg\";","import React from \"react\";\r\nimport styles from './loading.module.css';\r\nimport clsx from \"clsx\";\r\nimport LoadingIconPath from \"../../images/loading.svg\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className={clsx(styles.loadingWindow, \"text_type_main-large\")}>\r\n            Loading\r\n            <img src={LoadingIconPath} alt={\"Загрузка\"} className={styles.loadingIcon}/>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Loading);","import React from \"react\";\r\nimport styles from '../loading/loading.module.css';\r\nimport clsx from \"clsx\";\r\n\r\nfunction Error() {\r\n    return (\r\n        <div className={clsx(styles.loadingWindow, \"text_type_main-large\")}>\r\n            Что-то пошло не так!\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Error);","import React from 'react';\r\nimport styles from './order-details.module.css'\r\nimport doneImagePath from '../../images/done.png';\r\nimport clsx from \"clsx\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport Loading from \"../loading/loading\";\r\nimport Error from \"../error/error\";\r\n\r\nfunction OrderDetails() {\r\n    /** Получение данных о заказе */\r\n    const {order, orderRequest, orderFailed} = useSelector(state => state.order);\r\n\r\n    if (orderRequest) {\r\n        return (<Loading/>);\r\n    }\r\n    if (orderFailed) {\r\n        return (<Error/>);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.detailsContainer}>\r\n            <p className={clsx(\"mb-4 mt-4 text_type_digits-large\", styles.orderNumber)}>{order}</p>\r\n            <p className={\"text_type_main-medium mt-4 mb-15\"}>идентификатор заказа</p>\r\n            <img src={doneImagePath} alt={\"done\"}/>\r\n            <p className={\"text_type_main-default mt-15 mb-1\"}>Ваш заказ начали готовить</p>\r\n            <p className={\"text_type_main-default text_color_inactive mt-1 mb-30\"}>\r\n                Дождитесь готовности на орбитальной станции\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport styles from './modal-overlay.module.css';\r\n\r\ninterface IModalOverlay {\r\n    onClose: any;\r\n}\r\n\r\nfunction ModalOverlay(props: IModalOverlay) {\r\n    const handleClose = () => {\r\n        props.onClose();\r\n    }\r\n    return (\r\n        <div className={styles.overlay} onClick={handleClose}/>\r\n    );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import React, { ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './modal.module.css';\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport clsx from \"clsx\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n\r\nconst modalRoot = document.getElementById(\"modals\")!;\r\n\r\ninterface IModalProps {\r\n    caption: string;\r\n    onClose?: any;\r\n    children?: ReactNode;\r\n}\r\n//dispatch(closeModal());\r\nfunction Modal(props: IModalProps) {\r\n    const handleClose = React.useCallback(() => {\r\n        props.onClose();\r\n        /** Как только модалка с заказом будет также вынесена, можно будет оставить только goBack*/\r\n    }, [props]);\r\n    const escClose = React.useCallback((event: KeyboardEvent) => {\r\n        if (event.key === 'Escape') {\r\n            props.onClose();\r\n        }\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", escClose);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", escClose);\r\n        };\r\n    }, [escClose]);\r\n\r\n    return ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            <ModalOverlay onClose={props.onClose}/>\r\n            <div className={clsx(styles.modal)}>\r\n                <div className={clsx(\"text_type_main-large mt-10 mr-10 ml-10\", styles.modalHeader,\r\n                    !props.caption&&styles.modalCloseIconAlign)}>\r\n                    {props.caption}\r\n                    <CloseIcon type=\"primary\" onClick={handleClose}/>\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        </React.Fragment>\r\n        , modalRoot)\r\n}\r\n\r\nexport default Modal;\r\n\r\n","\r\nexport const BaseUrl: string = \"https://norma.nomoreparties.space/api/\";\r\nexport const authUrl: string = BaseUrl + \"auth/\";\r\nexport const ordersBaseUrl: string = \"wss://norma.nomoreparties.space/orders\";\r\n","export function getCookie(name: string): string | undefined {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' +\r\n            // eslint-disable-next-line\r\n            name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\ninterface ICookieProps {\r\n    [name: string]: any;\r\n}\r\nexport function setCookie(name: string, value: string | number | boolean, props?: ICookieProps): void {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string): void {\r\n    setCookie(name, \"\", { expires: -1 });\r\n}\r\n","import {authUrl, BaseUrl} from \"./baseUrl\";\r\nimport {getCookie, setCookie} from \"./cookie\";\r\nimport {IIngredient, IOrderFeed, IOrderItem} from \"./type\";\r\nimport {IUserInfo} from \"../pages/profile/profile\";\r\nimport {IForgotPasswordFields} from \"../pages/forgot-password/forgot-password\";\r\nimport {ILoginFields} from \"../pages/login/login\";\r\nimport { IRegistrationFields } from \"../pages/registration/registration\";\r\nimport {IResetPasswordFields} from \"../pages/reset-password/reset-password\";\r\n\r\n\r\ninterface IIngredientJson {\r\n    readonly success: boolean;\r\n    readonly data: Array<IIngredient>\r\n}\r\n\r\nexport function checkResponse(response: Response): void | Error {\r\n    if (!response.ok) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\nexport const getBurgerData = async (): Promise<IIngredientJson | Error> => {\r\n    try {\r\n        const url: string = BaseUrl + \"ingredients\";\r\n        const response: Response = await fetch(url);\r\n        checkResponse(response);\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\ninterface IOrderInfoJSON {\r\n    success: boolean;\r\n    orders: Array<IOrderFeed>\r\n}\r\n\r\nexport const getOrderInfo = async (number: number): Promise<IOrderInfoJSON | Error> => {\r\n    try {\r\n        const url: string = BaseUrl + \"orders/\" + number.toString();\r\n        const response: Response = await fetch(url);\r\n        checkResponse(response);\r\n        return response.json();\r\n    } catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\ninterface IOrderInfo {\r\n    readonly createdAt: string;\r\n    readonly name: string;\r\n    readonly number: number;\r\n    readonly price: number;\r\n    readonly status: string;\r\n    readonly updatedAt: string;\r\n    readonly _id: string;\r\n    readonly ingredients: Array<IIngredient>;\r\n    readonly owner: {\r\n        readonly createdAt: string;\r\n        readonly email: string;\r\n        readonly name: string;\r\n        readonly updatedAt: string\r\n    }\r\n}\r\ninterface IOrderJSON {\r\n    readonly success: boolean;\r\n    readonly name: string;\r\n    readonly order: IOrderInfo;\r\n}\r\n\r\nexport const createOrder = async (ingredients: Array<IOrderItem>): Promise<IOrderJSON | Error> => {\r\n    try {\r\n        const requestData: Array<string> = [];\r\n        ingredients.map((item) => {return requestData.push(item.ingredient._id)});\r\n        const url: string = BaseUrl + \"orders\";\r\n        const response: Response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n            body:  JSON.stringify({ingredients: requestData})\r\n        });\r\n        checkResponse(response);\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\nexport interface IUser {\r\n    readonly name: string;\r\n    readonly email: string;\r\n}\r\ninterface IUserJSON {\r\n    readonly accessToken: string;\r\n    readonly refreshToken: string;\r\n    readonly success: boolean;\r\n    readonly user: IUser;\r\n}\r\nexport const userAuth = async (form: ILoginFields | IRegistrationFields): Promise<IUserJSON | Error> => {\r\n    try {\r\n        const url = authUrl + ((form as IRegistrationFields).name ? \"register\" : \"login\");\r\n        const response: Response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(form)\r\n        });\r\n        checkResponse(response);\r\n        return response.json();\r\n\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\ninterface IEmailJSON {\r\n    readonly success: boolean;\r\n    readonly message: string;\r\n}\r\nexport const sendEmail = async (form: IForgotPasswordFields): Promise<IEmailJSON | Error> => {\r\n    try {\r\n        const url: string = BaseUrl + \"password-reset\";\r\n        const response: Response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(form)\r\n        });\r\n        checkResponse(response);\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\ninterface IUpdateJSON {\r\n    readonly success: boolean;\r\n    readonly message: string;\r\n}\r\nexport const updatePassword = async (form: IResetPasswordFields): Promise<IUpdateJSON | Error> => {\r\n    try {\r\n        const url: string = BaseUrl + \"password-reset/reset\";\r\n        const response: Response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(form)\r\n        });\r\n        checkResponse(response);\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\ninterface ITokenJSON {\r\n    readonly success: boolean;\r\n    readonly accessToken: string;\r\n    readonly refreshToken: string;\r\n}\r\nconst updateToken = async (): Promise<ITokenJSON | Error> => {\r\n    try {\r\n        const url: string = authUrl + \"token\";\r\n        const response: Response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body:  JSON.stringify({token: getCookie('refreshToken')})\r\n\r\n        });\r\n        checkResponse(response)\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\nexport interface IUserInfoJSON {\r\n    readonly success: boolean;\r\n    readonly user: IUser;\r\n}\r\n/** Запрос данных по токену */\r\nexport const getUserInfo = async (): Promise<IUserInfoJSON | undefined | Error> => {\r\n    const url: string = authUrl + \"user\";\r\n    try {\r\n        const response: Response = await fetch(url, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer'\r\n        });\r\n        checkResponse(response);\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        try {\r\n            /** Обновление токена, если на тот запрос выпала ошибка */\r\n            updateToken().then(async res => {\r\n                //@ts-ignore\r\n                if (res && res.success) {\r\n                    //@ts-ignore\r\n                    setCookie('refreshToken', res.refreshToken);\r\n                    //@ts-ignore\r\n                    setCookie('token', res.accessToken.split('Bearer ')[1]);\r\n                    const response: Response = await fetch(url, {\r\n                        method: 'GET',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: 'Bearer ' + getCookie('token')\r\n                        },\r\n                        redirect: 'follow',\r\n                        referrerPolicy: 'no-referrer'\r\n                    });\r\n                    checkResponse(response)\r\n                    return response.json();\r\n                }\r\n            }).catch(e => {\r\n\r\n            });\r\n        }\r\n        catch (e) {\r\n            throw new Error(\"response is not ok\");\r\n        }\r\n    }\r\n}\r\n\r\ninterface IUserUpdateJSON {\r\n    readonly success: boolean;\r\n    readonly user: IUser;\r\n}\r\nexport const updateUserInfo = async (form: IUserInfo): Promise<IUserUpdateJSON | Error> => {\r\n    try {\r\n        const url: string = authUrl + \"user\";\r\n        const response: Response = await fetch(url, {\r\n            method: 'PATCH',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(form)\r\n        });\r\n        checkResponse(response);\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}\r\n\r\ninterface ILogoutJSON {\r\n    readonly message: string;\r\n    readonly success: boolean;\r\n}\r\nexport const logOut = async (): Promise<ILogoutJSON | Error> => {\r\n    try {\r\n        const url: string = authUrl + \"logout\";\r\n        const response: Response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body:  JSON.stringify({token: getCookie('refreshToken')})\r\n\r\n        });\r\n        checkResponse(response)\r\n        return response.json();\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"response is not ok\");\r\n    }\r\n}","export const CREATE_ORDER_REQUEST: 'CREATE_ORDER_REQUEST' = 'CREATE_ORDER_REQUEST';\r\nexport const CREATE_ORDER_SUCCESS: 'CREATE_ORDER_SUCCESS' = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_ERROR: 'CREATE_ORDER_ERROR' = 'CREATE_ORDER_ERROR';\r\n\r\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\r\nexport const DELETE_ORDER: 'DELETE_ORDER' = 'DELETE_ORDER';\r\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const REPLACE_BUN: 'REPLACE_BUN' = 'REPLACE_BUN';\r\nexport const REORDER: 'REORDER' = 'REORDER';\r\nexport const DEFAULT: 'DEFAULT' = 'DEFAULT';","export const SET_VISIBLE: 'SET_VISIBLE' = 'SET_VISIBLE';\r\nexport const DELETE_VISIBLE: 'DELETE_VISIBLE' = 'DELETE_VISIBLE';\r\nexport const SET_TYPE: 'SET_TYPE' = 'SET_TYPE';\r\nexport const DELETE_TYPE: 'DELETE_TYPE' = 'DELETE_TYPE';","import {getOrder} from \"./constructor\";\r\nimport {DELETE_TYPE, DELETE_VISIBLE, SET_TYPE, SET_VISIBLE} from '../constants/modal';\r\nimport {DELETE_ORDER} from \"../constants/order-constructor\";\r\nimport {AppDispatch, AppThunk} from \"../../index\";\r\nimport {IOrderItem} from \"../../utils/type\";\r\n\r\nexport interface ISetVisibleAction {\r\n    readonly type: typeof SET_VISIBLE;\r\n}\r\n\r\nexport interface IDeleteVisibleAction {\r\n    readonly type: typeof DELETE_VISIBLE;\r\n}\r\nexport interface ISetTypeAction {\r\n    readonly type: typeof SET_TYPE;\r\n    readonly typeModal: string;\r\n}\r\nexport interface IDeleteTypeAction {\r\n    readonly type: typeof DELETE_TYPE;\r\n}\r\n\r\nexport type TModalAction =\r\n    | ISetVisibleAction\r\n    | IDeleteVisibleAction\r\n    | ISetTypeAction\r\n    | IDeleteTypeAction;\r\n\r\n\r\nexport const openModal: AppThunk = (content: Array<IOrderItem>) => (dispatch: AppDispatch | AppThunk) => {\r\n    dispatch({type: SET_VISIBLE});\r\n    dispatch({type: SET_TYPE, typeModal: `order`});\r\n    dispatch(getOrder(content));\r\n}\r\n\r\nexport const closeModal: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({type: DELETE_VISIBLE});\r\n    dispatch({type: DELETE_TYPE});\r\n    dispatch({type: DELETE_ORDER});\r\n}\r\n","import {createOrder} from \"../../utils/api\";\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_ERROR,\r\n    ADD_INGREDIENT, DELETE_INGREDIENT, DELETE_ORDER, REPLACE_BUN, REORDER, DEFAULT\r\n} from \"../constants/order-constructor\"\r\nimport {IIngredient, IOrderItem} from \"../../utils/type\";\r\nimport {AppDispatch, AppThunk} from \"../../index\";\r\n\r\n/** Настройка заказа */\r\nexport interface IAddIngredientAction {\r\n    readonly type: typeof ADD_INGREDIENT;\r\n    readonly item: IIngredient;\r\n}\r\n\r\nexport interface IDeleteIngredientAction {\r\n    readonly type: typeof DELETE_INGREDIENT;\r\n    readonly id: string;\r\n    readonly order: number;\r\n}\r\n\r\nexport interface IDeleteOrderAction {\r\n    readonly type: typeof DELETE_ORDER;\r\n}\r\n\r\nexport interface IReplaceBunAction {\r\n    readonly type: typeof REPLACE_BUN;\r\n    readonly item: IIngredient;\r\n}\r\n\r\nexport interface IReorderAction {\r\n    readonly type: typeof REORDER;\r\n    readonly from: number;\r\n    readonly to: number;\r\n}\r\n\r\nexport interface IDefaultAction {\r\n    readonly type: typeof DEFAULT;\r\n}\r\n\r\n/** Создание заказа */\r\nexport interface ICreateOrderRequestAction {\r\n    readonly type: typeof CREATE_ORDER_REQUEST;\r\n}\r\n\r\nexport interface ICreateOrderSuccessAction {\r\n    readonly type: typeof CREATE_ORDER_SUCCESS;\r\n    readonly order: number\r\n}\r\n\r\nexport interface ICreateOrderErrorAction {\r\n    readonly type: typeof CREATE_ORDER_ERROR;\r\n}\r\n\r\nexport type TConstructorActions =\r\n    | ICreateOrderRequestAction\r\n    | ICreateOrderSuccessAction\r\n    | ICreateOrderErrorAction\r\n    | IAddIngredientAction\r\n    | IDeleteIngredientAction\r\n    | IDeleteOrderAction\r\n    | IReplaceBunAction\r\n    | IReorderAction\r\n    | IDefaultAction;\r\n\r\nexport const getOrder: AppThunk = (data: Array<IOrderItem>) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: CREATE_ORDER_REQUEST\r\n    });\r\n    createOrder(data).then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: CREATE_ORDER_SUCCESS,\r\n                order: res.order.number\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: CREATE_ORDER_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: CREATE_ORDER_ERROR\r\n        });\r\n    });\r\n}\r\n","import React, {FC, useMemo, useRef} from \"react\";\r\nimport styles from './burger-constructor.module.css';\r\nimport clsx from \"clsx\";\r\nimport {\r\n    Button,\r\n    ConstructorElement,\r\n    CurrencyIcon,\r\n    DragIcon\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport Modal from \"../modal/modal\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {closeModal, openModal} from \"../../services/actions/modal\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {\r\n    ADD_INGREDIENT,\r\n    DEFAULT,\r\n    DELETE_INGREDIENT,\r\n    REORDER,\r\n    REPLACE_BUN\r\n} from \"../../services/constants/order-constructor\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {IIngredient, IOrderItem} from \"../../utils/type\";\r\nimport {History} from \"history\";\r\n\r\ninterface IDragItem {\r\n    item: IOrderItem\r\n}\r\n\r\n/** Карточка отдельного инг. для реализации dnd */\r\nconst DraggableCard: FC<IDragItem> = ({item}) => {\r\n    const dispatch = useDispatch();\r\n    const ref = useRef<HTMLDivElement>(null)\r\n    /** Обработка перетаскивания карточки */\r\n    const [, dragRef] = useDrag({\r\n        type: \"constructor\",\r\n        item: item,\r\n    });\r\n    let hoverIndex: number;\r\n    const [, dropTarget] = useDrop({\r\n        accept: \"constructor\",\r\n        drop(itemDrag: IOrderItem) {\r\n            dispatch({type: REORDER, from: itemDrag.order, to: hoverIndex});\r\n        },\r\n        hover(itemDrag) {\r\n            hoverIndex = item.order;\r\n        }\r\n    });\r\n    dragRef(dropTarget(ref));\r\n    const handleClose = (): void => {\r\n        dispatch({type: DELETE_INGREDIENT, id: item.ingredient._id, order: item.order})\r\n    }\r\n    return (\r\n        <div className={clsx(styles.container, \"mr-2 ml-4 mt-4\")}>\r\n            <DragIcon type=\"primary\"/>\r\n            <div className={clsx(styles.itemCard, \"ml-2\")} ref={ref}>\r\n                <ConstructorElement\r\n                    text={item.ingredient.name}\r\n                    price={item.ingredient.price}\r\n                    thumbnail={item.ingredient.image}\r\n                    handleClose={handleClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction BurgerConstructor() {\r\n    const content = useSelector(state => state.order.content);\r\n    /** Получение булочки*/\r\n    const bun: IOrderItem = useMemo(() => {\r\n        return content.filter(item => item.ingredient.type === \"bun\")[0];\r\n    }, [content]);\r\n\r\n    /** Получение массива ингредиентов без булочек*/\r\n    const ingredients: Array<IOrderItem> = useMemo(() => {\r\n        return content.filter(item => item.ingredient.type !== \"bun\");\r\n    }, [content]);\r\n\r\n    /** Вычисление итоговой стоимости заказа*/\r\n    const finalCost: number = useMemo(() => {\r\n        if (bun && ingredients) {\r\n            return ingredients.reduce(function (prev, next) {\r\n                return prev + next.ingredient.price;\r\n            }, 0) + 2 * bun.ingredient.price;\r\n        } else if (bun) {\r\n            return 2 * bun.ingredient.price;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }, [ingredients, bun])\r\n\r\n    /** Работа со статусом заказа и модальным окном */\r\n    const dispatch = useDispatch();\r\n    /** Получение статуса видимости модалки */\r\n    const {isVisible} = useSelector(state => state.modal);\r\n\r\n    /** Создание уникальных ключей */\r\n    function uID(): string {\r\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n    }\r\n\r\n\r\n    /** Секция с выбранными ингредиентами */\r\n    const IngredientSection = useMemo(() => {\r\n        return (\r\n            <div className={clsx(styles.menuContainer)}>\r\n                {ingredients.sort((a, b) => a.order - b.order).map((item) => {\r\n                    return (\r\n                        <DraggableCard key={uID()} item={item}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }, [ingredients]);\r\n\r\n    /** Обработка броска карточки */\r\n    const [{isHover}, dropTarget] = useDrop({\r\n        accept: \"ingredients\",\r\n        drop(item: IIngredient) {\r\n            item.type === \"bun\" ? dispatch({type: REPLACE_BUN, item: item})\r\n                : content.length >= 2 ? dispatch({type: ADD_INGREDIENT, item: item}) : dispatch({type: DEFAULT});\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    });\r\n\r\n    /**Реализация переадресации, если нет данных об авторизации*/\r\n    const history: History = useHistory();\r\n    const {isAuth} = useSelector(state => state.user);\r\n\r\n    /** Подсветка области, если мало или вообще нет элементов в заказе */\r\n    const needShowDrop: string = content.length < 3 ? isHover ? styles.canDrop : \"\" : \"\";\r\n\r\n    const handleClose = (): void => {\r\n        dispatch(closeModal());\r\n    }\r\n\r\n    const handleClick = (): void => {\r\n        if (isAuth) {\r\n            dispatch(openModal(content));\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n    return (\r\n        <section className={clsx(styles.section, \"mt-25\", needShowDrop)} ref={dropTarget}>\r\n            {content && bun &&\r\n                <div className={\"mr-4 ml-4 pl-8\"}>\r\n                    <ConstructorElement\r\n                        type=\"top\"\r\n                        isLocked={true}\r\n                        text={bun.ingredient.name + \" (верх)\"}\r\n                        price={bun.ingredient.price}\r\n                        thumbnail={bun.ingredient.image}\r\n                    />\r\n                </div>\r\n            }\r\n            {IngredientSection}\r\n            {content && bun &&\r\n                <div className={\"mr-4 ml-4 mt-4 pl-8\"}>\r\n                    <ConstructorElement\r\n                        type=\"bottom\"\r\n                        isLocked={true}\r\n                        text={bun.ingredient.name + \" (низ)\"}\r\n                        price={bun.ingredient.price}\r\n                        thumbnail={bun.ingredient.image}\r\n                    />\r\n                </div>\r\n            }\r\n            {isVisible &&\r\n                <Modal caption={\"\"} onClose={handleClose}>\r\n                    <OrderDetails/>\r\n                </Modal>}\r\n            <div className={clsx(\"mt-10 mr-4 mb-10\", styles.finalContainer, styles.container)}>\r\n                <div className={styles.container}>\r\n                    <span className={clsx(\"mr-5 text_type_digits-default\", styles.container)}>\r\n                        <span className=\"pr-2\">{finalCost}</span>\r\n                        <CurrencyIcon type=\"primary\"/>\r\n                    </span>\r\n                </div>\r\n                <Button type=\"primary\" size=\"medium\" disabled={content.length < 1} onClick={handleClick}>\r\n                    Оформить заказ\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default React.memo(BurgerConstructor);\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport styles from './home.module.css'\r\nimport Loading from \"../../components/loading/loading\";\r\n\r\n\r\nfunction HomePage() {\r\n    /** Получение данных об ингредиентах */\r\n    const {isIngredientsLoading, isIngredientsFailed}\r\n        = useSelector(state => state.burgerIngredient);\r\n\r\n    if (isIngredientsLoading || isIngredientsFailed) {\r\n        return (<Loading/>)\r\n    }\r\n    return (\r\n        <main className={styles.mainSection}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <BurgerIngredients/>\r\n                <BurgerConstructor/>\r\n            </DndProvider>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default React.memo(HomePage);\r\n","export const USER_REQUEST_LOADING: 'USER_REQUEST_LOADING' = 'USER_REQUEST_LOADING';\r\n/** Используем для удаления записи о существующем пользователе при ошибках в запросах register + login + user */\r\nexport const USER_REQUEST_ERROR: 'USER_REQUEST_ERROR' = 'USER_REQUEST_ERROR';\r\n/** Используем для сохранения информации о существующем пользователе, если обновление или выход не удался */\r\nexport const USER_UPDATE_REQUEST_ERROR: 'USER_UPDATE_REQUEST_ERROR' = 'USER_UPDATE_REQUEST_ERROR';\r\nexport const USER_LOGOUT_REQUEST_ERROR: 'USER_LOGOUT_REQUEST_ERROR' = 'USER_LOGOUT_REQUEST_ERROR';\r\n/** При логине и регистрации записываем вместо пустых данных, при обновлении перезаписываем */\r\nexport const USER_REQUEST_SUCCESS: 'USER_REQUEST_SUCCESS' = 'USER_REQUEST_SUCCESS';\r\n/** Удаление пользователя при выходе из профиля */\r\nexport const USER_LOGOUT_REQUEST_SUCCESS: 'USER_LOGOUT_REQUEST_SUCCESS' = 'USER_LOGOUT_REQUEST_SUCCESS';\r\n\r\n/** Восстановление пароля */\r\nexport const EMAIL_REQUEST: 'EMAIL_REQUEST' = 'EMAIL_REQUEST';\r\nexport const EMAIL_SUCCESS: 'EMAIL_SUCCESS' = 'EMAIL_SUCCESS';\r\nexport const EMAIL_ERROR: 'EMAIL_ERROR' = 'EMAIL_ERROR';\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR' = 'RESET_PASSWORD_ERROR';","import {getUserInfo, userAuth, sendEmail, updatePassword, updateUserInfo, logOut, IUser} from \"../../utils/api\";\r\nimport {deleteCookie, setCookie} from \"../../utils/cookie\";\r\nimport {\r\n    USER_REQUEST_LOADING,\r\n    EMAIL_ERROR,\r\n    EMAIL_SUCCESS,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    USER_LOGOUT_REQUEST_ERROR,\r\n    USER_LOGOUT_REQUEST_SUCCESS,\r\n    RESET_PASSWORD_ERROR,\r\n    USER_REQUEST_ERROR,\r\n    USER_UPDATE_REQUEST_ERROR,\r\n    USER_REQUEST_SUCCESS,\r\n    EMAIL_REQUEST\r\n} from '../constants/auth'\r\nimport {AppDispatch, AppThunk} from \"../../index\";\r\nimport {ILoginFields} from \"../../pages/login/login\";\r\nimport {IRegistrationFields} from \"../../pages/registration/registration\";\r\nimport {IUserInfo} from \"../../pages/profile/profile\";\r\nimport {IResetPasswordFields} from \"../../pages/reset-password/reset-password\";\r\nimport {IForgotPasswordFields} from \"../../pages/forgot-password/forgot-password\";\r\n\r\n\r\nexport interface IUserRequestAction {\r\n    readonly type: typeof USER_REQUEST_LOADING;\r\n}\r\n\r\nexport interface IUserRequestErrorAction {\r\n    readonly type: typeof USER_REQUEST_ERROR;\r\n}\r\n\r\nexport interface IUserUpdateRequestErrorAction {\r\n    readonly type: typeof USER_UPDATE_REQUEST_ERROR;\r\n}\r\n\r\nexport interface IUserLogoutRequestErrorAction {\r\n    readonly type: typeof USER_LOGOUT_REQUEST_ERROR;\r\n}\r\n\r\nexport interface IUserRequestSuccessAction {\r\n    readonly type: typeof USER_REQUEST_SUCCESS;\r\n    readonly user: IUser;\r\n}\r\n\r\nexport interface IUserUpdateRequestSuccessAction {\r\n    readonly type: typeof USER_LOGOUT_REQUEST_SUCCESS;\r\n}\r\n\r\nexport type TAuthActions =\r\n    | IUserRequestAction\r\n    | IUserRequestErrorAction\r\n    | IUserUpdateRequestErrorAction\r\n    | IUserLogoutRequestErrorAction\r\n    | IUserRequestSuccessAction\r\n    | IUserUpdateRequestSuccessAction;\r\n\r\n\r\nexport const enter: AppThunk = (form: ILoginFields | IRegistrationFields) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: USER_REQUEST_LOADING\r\n    });\r\n    userAuth(form).then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            setCookie('refreshToken', res.refreshToken);\r\n            setCookie('token', res.accessToken.split('Bearer ')[1]);\r\n            dispatch({\r\n                type: USER_REQUEST_SUCCESS,\r\n                user: res.user\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: USER_REQUEST_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: USER_REQUEST_ERROR\r\n        });\r\n    });\r\n};\r\n\r\n\r\nexport const getUser: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: USER_REQUEST_LOADING\r\n    });\r\n    getUserInfo().then(res => {\r\n        if (res instanceof Error) {\r\n            dispatch({\r\n                type: USER_REQUEST_ERROR\r\n            });\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: USER_REQUEST_SUCCESS,\r\n                user: res.user\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: USER_REQUEST_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: USER_REQUEST_ERROR\r\n        });\r\n    });\r\n};\r\n\r\nexport const updateInfo: AppThunk = (form: IUserInfo) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: USER_REQUEST_LOADING\r\n    });\r\n    updateUserInfo(form).then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: USER_REQUEST_SUCCESS,\r\n                user: res.user\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: USER_UPDATE_REQUEST_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST_ERROR\r\n        });\r\n    });\r\n}\r\n\r\nexport const logout: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: USER_REQUEST_LOADING\r\n    });\r\n    logOut().then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            deleteCookie('refreshToken')\r\n            deleteCookie('token')\r\n            dispatch({\r\n                type: USER_LOGOUT_REQUEST_SUCCESS,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGOUT_REQUEST_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: USER_LOGOUT_REQUEST_ERROR\r\n        });\r\n    });\r\n}\r\n\r\n/** Восстановление пароля */\r\nexport interface IEmailRequestAction {\r\n    readonly type: typeof EMAIL_REQUEST;\r\n}\r\n\r\nexport interface IEmailSuccessAction {\r\n    readonly type: typeof EMAIL_SUCCESS;\r\n}\r\n\r\nexport interface IEmailErrorAction {\r\n    readonly type: typeof EMAIL_ERROR;\r\n}\r\n\r\nexport interface IResetPasswordRequestAction {\r\n    readonly type: typeof RESET_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface IResetPasswordSuccessAction {\r\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface IResetPasswordErrorAction {\r\n    readonly type: typeof RESET_PASSWORD_ERROR;\r\n}\r\n\r\nexport type TRecoverPasswordActions =\r\n    | IEmailRequestAction\r\n    | IEmailSuccessAction\r\n    | IEmailErrorAction\r\n    | IResetPasswordRequestAction\r\n    | IResetPasswordSuccessAction\r\n    | IResetPasswordErrorAction;\r\n\r\nexport const resetPasswordEmail: AppThunk = (form: IForgotPasswordFields) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: EMAIL_REQUEST\r\n    });\r\n    sendEmail(form).then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: EMAIL_SUCCESS,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: EMAIL_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: EMAIL_ERROR\r\n        });\r\n    });\r\n}\r\n\r\nexport const resetPassword: AppThunk = (form: IResetPasswordFields) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: RESET_PASSWORD_REQUEST\r\n    });\r\n    updatePassword(form).then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: RESET_PASSWORD_SUCCESS,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: RESET_PASSWORD_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: RESET_PASSWORD_ERROR\r\n        });\r\n    });\r\n}","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport {Button, EmailInput, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './login.module.css'\r\nimport clsx from \"clsx\";\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch} from \"../../utils/hooks\";\r\nimport {enter} from \"../../services/actions/auth\";\r\n\r\nexport interface ILoginFields {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nfunction LoginPage() {\r\n\r\n    /** Форма для отправки на бэк */\r\n    const initialState: ILoginFields = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const [form, setValue] = useState<ILoginFields>(initialState);\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    /** Авторизация пользователя */\r\n    const dispatch = useDispatch();\r\n    const login = useCallback(\r\n        (e: React.SyntheticEvent): void => {\r\n            e.preventDefault();\r\n            dispatch(enter(form));\r\n        },\r\n        [form, dispatch]\r\n    );\r\n\r\n    return (\r\n        <form className={styles.wrapper} onSubmit={login}>\r\n            <h1 className={clsx(styles.header, \"mb-6 text_type_main-medium\")}>Вход</h1>\r\n            <div className={\"mb-6\"}>\r\n                <EmailInput onChange={onChange} value={form.email} name={'email'}/>\r\n            </div>\r\n            <div className={\"mb-6\"}>\r\n                <PasswordInput name={'password'} value={form.password} onChange={onChange}/>\r\n            </div>\r\n            <div className={\"mb-20\"}>\r\n                <Button type=\"primary\" size=\"medium\" htmlType={\"submit\"}>\r\n                    Войти\r\n                </Button>\r\n            </div>\r\n            <p className={clsx(styles.text, \"text_type_main-default text_color_inactive\", \"pb-4\")}>\r\n                Вы новый пользователь? <Link to={\"/register\"} className={styles.link}> Зарегистрироваться </Link>\r\n            </p>\r\n            <p className={clsx(styles.text, \"text_type_main-default text_color_inactive\")}>\r\n                Забыли пароль? <Link to={\"/forgot-password\"} className={styles.link}> Восстановить пароль </Link>\r\n            </p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default React.memo(LoginPage);\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport {Button, EmailInput, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './registration.module.css'\r\nimport clsx from \"clsx\";\r\nimport {Link} from 'react-router-dom';\r\nimport {enter} from \"../../services/actions/auth\";\r\nimport {useDispatch} from \"../../utils/hooks\";\r\n\r\nexport interface IRegistrationFields {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nfunction RegistrationPage() {\r\n\r\n    const initialState: IRegistrationFields = {\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [form, setValue] = useState<IRegistrationFields>(initialState);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    /** Создание пользователя */\r\n    const dispatch = useDispatch();\r\n    const register = useCallback((e: React.SyntheticEvent): void => {\r\n        e.preventDefault();\r\n        dispatch(enter(form));\r\n    }, [form, dispatch]);\r\n\r\n    return (<form className={styles.wrapper} onSubmit={register}>\r\n        <h1 className={clsx(styles.header, \"mb-6 text_type_main-medium\")}>Регистрация</h1>\r\n        <div className={\"mb-6\"}>\r\n            <Input\r\n                value={form.name}\r\n                onChange={onChange}\r\n                placeholder={'Имя'}\r\n                name={\"name\"}\r\n                size={'default'}\r\n            />\r\n        </div>\r\n        <div className={\"mb-6\"}>\r\n            <EmailInput onChange={onChange} value={form.email} name={'email'}/>\r\n        </div>\r\n        <div className={\"mb-6\"}>\r\n            <PasswordInput name={'password'} value={form.password} onChange={onChange}/>\r\n        </div>\r\n        <div className={\"mb-20\"}>\r\n            <Button type=\"primary\" size=\"medium\" htmlType={\"submit\"}>\r\n                Зарегистрироваться\r\n            </Button>\r\n        </div>\r\n        <p className={clsx(styles.text, \"text_type_main-default text_color_inactive\")}>\r\n            Уже зарегистрированы? <Link to={\"/login\"} className={styles.link}> Войти </Link>\r\n        </p>\r\n    </form>)\r\n}\r\n\r\nexport default React.memo(RegistrationPage);\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport {deleteCookie} from \"../../utils/cookie\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {Link, Redirect, useHistory, useLocation} from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './reset-password.module.css'\r\nimport {resetPassword} from \"../../services/actions/auth\";\r\nimport Loading from \"../../components/loading/loading\";\r\nimport Error from \"../../components/error/error\";\r\nimport {History, Location} from \"history\";\r\n\r\nexport interface IResetPasswordFields {\r\n    password: string;\r\n    token: string;\r\n}\r\n\r\nfunction PasswordResetPage() {\r\n\r\n    /** Форма для отправки на бэк */\r\n    const initialState: IResetPasswordFields = {\r\n        password: '',\r\n        token: ''\r\n    }\r\n    const [form, setValue] = useState<IResetPasswordFields>(initialState);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const {isRequestLoading, isRequestFailed, isPasswordReset}\r\n        = useSelector(state => state.resetPassword);\r\n    const canGoToNextStep: boolean = !isRequestLoading && !isRequestFailed && isPasswordReset;\r\n    const history: History = useHistory();\r\n\r\n    /** Установка нового пароля */\r\n    const dispatch = useDispatch();\r\n    const reset = useCallback(\r\n        (e: React.SyntheticEvent) => {\r\n            e.preventDefault();\r\n            deleteCookie('emailResetSend');\r\n            dispatch(resetPassword(form));\r\n        },\r\n        [form, dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (canGoToNextStep) {\r\n            history.replace({\r\n                pathname: \"/login\",\r\n            });\r\n        }\r\n    }, [history, canGoToNextStep])\r\n\r\n    /** Получение данных о возможности доступа */\r\n    const location: Location = useLocation();\r\n    if (!location.state && !(location.state as any).emailHasChecked) {\r\n        return (\r\n            <Redirect to={\"/\"}/>\r\n        )\r\n    }\r\n\r\n    if (isRequestLoading) {\r\n        return (<Loading/>);\r\n    }\r\n    if (isRequestFailed) {\r\n        return (<Error/>);\r\n    }\r\n\r\n    return (\r\n        <form className={styles.wrapper} onSubmit={reset}>\r\n            <h1 className={clsx(styles.header, \"mb-6 text_type_main-medium\")}>Восстановление пароля</h1>\r\n            <div className={\"mb-6\"}>\r\n                <Input\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                    name=\"password\"\r\n                    placeholder=\"Введите новый пароль\"\r\n                    icon=\"ShowIcon\"\r\n                />\r\n            </div>\r\n            <div className={\"mb-6\"}>\r\n                <Input onChange={onChange} value={form.token} name={'token'} placeholder={\"Введите код из письма\"}/>\r\n            </div>\r\n            <div className={\"mb-20\"}>\r\n                <Button type=\"primary\" size=\"medium\" htmlType={\"submit\"}>\r\n                    Сохранить\r\n                </Button>\r\n            </div>\r\n            <p className={clsx(styles.text, \"text_type_main-default text_color_inactive\")}>\r\n                Вспомнили пароль? <Link to={\"/login\"} className={styles.link}> Войти </Link>\r\n            </p>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default React.memo(PasswordResetPage);\r\n","import React, {FC, ReactNode } from \"react\";\r\nimport {useSelector} from \"../utils/hooks\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport Loading from \"./loading/loading\";\r\nimport {Location} from \"history\";\r\n\r\ninterface IRedirectProps {\r\n    location: Location;\r\n}\r\n\r\nconst LoginRedirect:FC<IRedirectProps> = ({location}) => (\r\n    <Redirect to={{pathname: '/login', state: {from: location}}}/>\r\n);\r\n\r\nconst MainPageRedirect:FC<IRedirectProps> = ({location}) => {\r\n    const background = location.state && (location.state as any).from;\r\n    if (background) {\r\n        return (\r\n            <Redirect to={{pathname: background.pathname}}/>\r\n        )\r\n    }\r\n    return (\r\n        <Redirect to={{pathname: '/'}}/>\r\n    )\r\n};\r\n\r\ninterface IProtectedRouteProps {\r\n    path: string;\r\n    isForAuthUser?: boolean,\r\n    children?: ReactNode;\r\n}\r\n\r\nfunction ProtectedRoute({isForAuthUser = false, children, ...rest}: IProtectedRouteProps) {\r\n\r\n    const {isAuth, isUserLoading} = useSelector(state => state.user);\r\n\r\n    const renderComponent = React.useMemo(() => {\r\n        if (isForAuthUser && !isAuth) {\r\n            return LoginRedirect;\r\n        }\r\n\r\n        if (!isForAuthUser && isAuth) {\r\n            return MainPageRedirect;\r\n        }\r\n\r\n        return () => children;\r\n    }, [children, isAuth, isForAuthUser]);\r\n\r\n    if (isUserLoading) {\r\n        return <Loading/>;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={renderComponent}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport styles from './ingredient-details.module.css'\r\nimport clsx from \"clsx\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Loading from \"../loading/loading\";\r\nimport Error from \"../error/error\";\r\n\r\nfunction IngredientDetails() {\r\n    const {ingredients, isIngredientsLoading, isIngredientsFailed} = useSelector(state => state.burgerIngredient);\r\n\r\n    const {id}: {id: string} = useParams<{id: string}>();\r\n\r\n    if (isIngredientsLoading || ingredients.length < 1) {\r\n        return (<Loading/>);\r\n    }\r\n    if (isIngredientsFailed) {\r\n        return (<Error/>);\r\n    }\r\n\r\n    const ingredientSelected = ingredients.find(item => item._id === id);\r\n    if (!ingredientSelected) {\r\n        return (<div/>);\r\n    }\r\n    return (\r\n        <div className={styles.detailsContainer}>\r\n            <div>\r\n                <img src={ingredientSelected.image_large} alt=\"Изображение ингредиента\"/>\r\n            </div>\r\n            <p className={\"mt-4 mb-8 text_type_main-medium\"}>\r\n                {ingredientSelected.name}\r\n            </p>\r\n            <div className={clsx(\"mb-15 text_color_inactive text_type_main-default\", styles.caloriesInfoContainer)}>\r\n                <p className={styles.infoP}>\r\n                    Калории,ккал<br/>\r\n                    <span className={\"text_type_digits-default\"}>{ingredientSelected.calories}</span>\r\n                </p>\r\n                <p className={styles.infoP}>\r\n                    Белки, г<br/>\r\n                    <span className={\"text_type_digits-default\"}>{ingredientSelected.proteins}</span>\r\n                </p>\r\n                <p className={styles.infoP}>\r\n                    Жиры, г<br/>\r\n                    <span className={\"text_type_digits-default\"}>{ingredientSelected.fat}</span>\r\n                </p>\r\n                <p className={styles.infoP}>\r\n                    Углеводы, г<br/>\r\n                    <span className={\"text_type_digits-default\"}>{ingredientSelected.carbohydrates}</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientDetails;\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport styles from './forgot-password.module.css';\r\nimport clsx from \"clsx\";\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {resetPasswordEmail} from \"../../services/actions/auth\";\r\nimport Loading from \"../../components/loading/loading\";\r\nimport Error from \"../../components/error/error\";\r\nimport {History} from \"history\";\r\n\r\nexport interface IForgotPasswordFields {\r\n    email: string;\r\n}\r\n\r\nfunction ForgotPasswordPage() {\r\n\r\n    /** Получение данных об успешной отправки кода на email и переадресация */\r\n    const {isRequestLoading, isRequestFailed, isEmailSend} = useSelector(state => state.resetPassword);\r\n    const canGoToNextStep: boolean = !isRequestLoading && !isRequestFailed && isEmailSend;\r\n    const history: History = useHistory();\r\n\r\n    /** Форма для отправки на бэк */\r\n    const initialState: IForgotPasswordFields = {\r\n        email: ''\r\n    }\r\n    const [form, setValue] = useState<IForgotPasswordFields>(initialState);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    /** Отправка письма на почту */\r\n    const dispatch = useDispatch();\r\n    const reset = useCallback(\r\n        (e: React.SyntheticEvent): void => {\r\n            e.preventDefault();\r\n            dispatch(resetPasswordEmail(form));\r\n        },\r\n        [form, dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (canGoToNextStep) {\r\n            history.push({\r\n                pathname: \"/reset-password\",\r\n                state: {emailHasChecked: true},\r\n            });\r\n        }\r\n    }, [history, canGoToNextStep])\r\n\r\n    if (isRequestLoading) {\r\n        return (<Loading/>)\r\n    }\r\n    if (isRequestFailed) {\r\n        return (<Error/>);\r\n    }\r\n\r\n    return (\r\n        <form className={styles.wrapper} onSubmit={reset}>\r\n            <h1 className={clsx(styles.header, \"mb-6 text_type_main-medium\")}>Восстановление пароля</h1>\r\n            <div className={\"mb-6\"}>\r\n                <Input onChange={onChange} value={form.email} name={'email'} placeholder={\"Укажите e-mail\"}/>\r\n            </div>\r\n            <div className={\"mb-20\"}>\r\n                <Button type=\"primary\" size=\"medium\" htmlType={\"submit\"}>\r\n                    Восстановить\r\n                </Button>\r\n            </div>\r\n            <p className={clsx(styles.text, \"text_type_main-default text_color_inactive\")}>\r\n                Вспомнили пароль? <Link to={\"/login\"} className={styles.link}> Войти </Link>\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\nexport default React.memo(ForgotPasswordPage);\r\n","import React, {useCallback} from \"react\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport styles from \"./profile-nav.module.css\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport clsx from \"clsx\";\r\nimport {logout} from \"../../services/actions/auth\";\r\nimport {History} from \"history\";\r\n\r\n\r\nfunction ProfileNav() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history: History = useHistory();\r\n    const {username, email} = useSelector(state => state.user);\r\n    const logoutUser = useCallback((e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(logout())\r\n        if (!username && !email) {\r\n            history.replace(\"/login\");\r\n        }\r\n    }, [dispatch, history, email, username])\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <div className={styles.linkBlock}>\r\n                <NavLink\r\n                    to=\"/profile\"\r\n                    exact={true}\r\n                    activeClassName={styles.active}\r\n                    className={clsx(styles.link, \"text_type_main-medium text_color_inactive\")}\r\n                >\r\n                    Профиль\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.linkBlock}>\r\n                <NavLink\r\n                    to=\"/profile/orders\"\r\n                    activeClassName={styles.active}\r\n                    className={clsx(styles.link, \"text_type_main-medium text_color_inactive\")}\r\n                >\r\n                    История заказов\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.linkBlock}>\r\n                <NavLink\r\n                    to=\"/login\"\r\n                    activeClassName={styles.active}\r\n                    className={clsx(styles.link, \"text_type_main-medium text_color_inactive\")}\r\n                    onClick={logoutUser}\r\n                >\r\n                    Выход\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(ProfileNav)","import React, {FC, Fragment} from \"react\";\r\nimport {IOrderFeed} from \"../../utils/type\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './order-info.module.css'\r\nimport clsx from \"clsx\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport * as uuid from \"uuid\";\r\nimport {History, Location} from \"history\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nconst OrderInfoCard: FC<{order: IOrderFeed, IsShowStatus: boolean}> = ({order, IsShowStatus}) => {\r\n\r\n    const ingredients = useSelector(state => state.burgerIngredient.ingredients);\r\n    let orderReverse = [...order.ingredients];\r\n    let ingredientsLeft = 0\r\n    if (orderReverse.length > 5) {\r\n        orderReverse = orderReverse.slice(0, 5);\r\n        ingredientsLeft = order.ingredients.length - 5\r\n    }\r\n    orderReverse = orderReverse.reverse();\r\n    let sum = 0;\r\n    let status: string = '';\r\n    switch (order.status) {\r\n        case \"created\": {\r\n            status = 'Создан';\r\n            break;\r\n        }\r\n        case \"done\": {\r\n            status = 'Выполнен';\r\n            break;\r\n        }\r\n        case \"pending\": {\r\n            status = 'Готовится';\r\n            break;\r\n        }\r\n    }\r\n\r\n    /** Модальное окно */\r\n    const history: History = useHistory();\r\n    const location: Location = useLocation();\r\n    const handleClick = (): void => {\r\n        history.push({\r\n            pathname: IsShowStatus ? `/profile/orders/${order.number}` : `/feed/${order.number}`,\r\n            state: { background: location },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(styles.card, \"p-6\")} onClick={handleClick}>\r\n            <div className={clsx(styles.cardInfo, \"mb-6\")}>\r\n                <p className=\"text text_type_digits-default\">#{order.number}</p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                    {new Date(order.createdAt).toLocaleString()}\r\n                </p>\r\n            </div>\r\n            <p className={clsx(\"text text_type_main-medium mb-2\", !IsShowStatus && \"mb-6\")}>\r\n                {order.name}\r\n            </p>\r\n            {IsShowStatus &&\r\n                <p className={clsx(\"text text_type_main-default mb-6\",\r\n                    order.status === \"done\" && styles.statusDone)}>\r\n                    {status}\r\n                </p>}\r\n            <div className={styles.ingredientsWrapper}>\r\n                <div className={styles.ingredientsImageRowContainer}>\r\n                    {orderReverse.map((item, index) => {\r\n                        let ingredientInOrder = ingredients.find(ingredient => ingredient._id === item);\r\n                        let scr;\r\n                        if (!ingredientInOrder) {\r\n                            scr = \"https://code.s3.yandex.net/react/code/sauce-03-mobile.png\";\r\n                        } else {\r\n                            sum += ingredientInOrder.type === \"bun\" ?\r\n                                ingredientInOrder.price*2 : ingredientInOrder.price;\r\n                            scr = ingredientInOrder.image_mobile;\r\n                        }\r\n                        return (\r\n                            <Fragment key={uuid.v4()}>\r\n                                <div className={clsx(styles.ingredientImageWrapper,\r\n                                    styles.ingredientTransformImageWrapper,\r\n                                    (ingredientsLeft > 0 && index === 0) && styles.ingredientImageFirstCounter)}\r\n                                >\r\n                                    <img src={scr} className={clsx(styles.ingredientImage)}\r\n                                         alt={\"Изображение\"} />\r\n                                </div>\r\n                                {ingredientsLeft > 0 && index === 0 &&\r\n                                    <div className={clsx(styles.ingredientsLeftCounter, \"text_type_digits-default\")}>\r\n                                        +{ingredientsLeft}\r\n                                    </div>\r\n                                }\r\n                            </Fragment>\r\n\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className={styles.ingredientsInfoWrapper}>\r\n                    <p className=\"text text_type_digits-default\">{sum}</p> <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default OrderInfoCard;","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';","import {\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE\r\n} from \"../constants/webSocket\";\r\nimport {TFeedOrdersData} from \"../../utils/type\";\r\n\r\nexport interface IWSConnectionStart {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    readonly payload: string;\r\n}\r\nexport interface IWSConnectionSuccess {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n    readonly payload: any;\r\n}\r\nexport interface IWSConnectionError {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n    readonly payload: any;\r\n}\r\nexport interface IWSConnectionClosed {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n    readonly payload: any;\r\n}\r\nexport interface IWSConnectionGet {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    readonly payload: TFeedOrdersData;\r\n}\r\nexport interface IWSConnectionSend {\r\n    readonly type: typeof WS_SEND_MESSAGE;\r\n    readonly payload: any;\r\n}\r\n\r\nexport type TWebSocketActions =\r\n    | IWSConnectionStart\r\n    | IWSConnectionSuccess\r\n    | IWSConnectionError\r\n    | IWSConnectionClosed\r\n    | IWSConnectionGet\r\n    | IWSConnectionSend;\r\n\r\nexport const wsConnectionStart = (url: string): IWSConnectionStart => {\r\n    return {\r\n        type: WS_CONNECTION_START,\r\n        payload: url,\r\n    };\r\n};\r\n\r\nexport const wsConnectionSuccess = (): IWSConnectionSuccess => {\r\n    return {\r\n        type: WS_CONNECTION_SUCCESS,\r\n        payload: ''\r\n    };\r\n};\r\n\r\nexport const wsConnectionError = (): IWSConnectionError => {\r\n    return {\r\n        type: WS_CONNECTION_ERROR,\r\n        payload: ''\r\n    };\r\n};\r\n\r\nexport const wsConnectionClosed = (): IWSConnectionClosed => {\r\n    return {\r\n        type: WS_CONNECTION_CLOSED,\r\n        payload: ''\r\n    };\r\n};\r\n\r\nexport const wsGetMessage = (message: any): IWSConnectionGet => {\r\n    return {\r\n        type: WS_GET_MESSAGE,\r\n        payload: message\r\n    };\r\n};\r\n\r\nexport const wsSendMessage = (message: any): IWSConnectionSend => {\r\n    return {\r\n        type: WS_SEND_MESSAGE,\r\n        payload: message\r\n    };\r\n};\r\n\r\nexport type TWSActions = {\r\n    wsInit: typeof WS_CONNECTION_START,\r\n    wsSendMessage: typeof WS_SEND_MESSAGE,\r\n    onOpen: typeof WS_CONNECTION_SUCCESS,\r\n    onClose: typeof WS_CONNECTION_CLOSED,\r\n    onError: typeof WS_CONNECTION_ERROR,\r\n    onMessage: typeof WS_GET_MESSAGE\r\n};\r\n\r\n","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {getUser, updateInfo} from \"../../services/actions/auth\";\r\nimport ProfileNav from \"../../components/profile-nav/profile-nav\";\r\nimport styles from \"./profile.module.css\"\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport clsx from \"clsx\";\r\nimport {useRouteMatch} from \"react-router-dom\";\r\nimport OrderInfoCard from \"../../components/order-info/order-info\";\r\nimport * as uuid from \"uuid\";\r\nimport Loading from \"../../components/loading/loading\";\r\nimport {wsConnectionClosed, wsConnectionStart} from \"../../services/actions/webSocket\";\r\nimport {ordersBaseUrl} from \"../../utils/baseUrl\";\r\nimport { getCookie } from \"../../utils/cookie\";\r\n\r\nexport interface IUserInfo {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst ProfileData = () => {\r\n    /** Получение и сохранение данных о пользователе*/\r\n    const dispatch = useDispatch();\r\n    const {username, email, isAuth, isUserLoading} = useSelector(state => state.user);\r\n\r\n    if (!username && !email && isAuth) {\r\n        if (!isUserLoading) dispatch(getUser());\r\n    }\r\n\r\n    /** Инициализация формы*/\r\n    const initialState: IUserInfo = {\r\n        name: username,\r\n        email: email,\r\n        password: \"\",\r\n    }\r\n    const [form, setValue] = React.useState<IUserInfo>(initialState);\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n    /** Возвращение к исходному состоянию */\r\n    const resetForm = (): void => {\r\n        setValue(initialState);\r\n    }\r\n    /** Обновление данных */\r\n    const update = useCallback(\r\n        (e: React.SyntheticEvent) => {\r\n            e.preventDefault();\r\n            dispatch(updateInfo(form));\r\n        },\r\n        [form, dispatch]\r\n    );\r\n    return (\r\n        <form className={clsx(\"ml-15\")} onSubmit={update}>\r\n            <div className={\"mb-6\"}>\r\n                <Input value={form.name} onChange={onChange} name={\"name\"} placeholder={\"Имя\"}\r\n                       icon={'EditIcon'}/>\r\n            </div>\r\n            <div className={\"mb-6\"}>\r\n                <Input value={form.email} onChange={onChange} name={\"email\"} placeholder={\"Логин\"}\r\n                       icon={'EditIcon'}/>\r\n            </div>\r\n            <div className={\"mb-6\"}>\r\n                <Input value={form.password} onChange={onChange} name={\"password\"}\r\n                       placeholder={\"Пароль\"}\r\n                       icon={'EditIcon'}/>\r\n            </div>\r\n            <div className={styles.submitContainer}>\r\n                <p className={clsx(\"mr-7  text_type_main-small\", styles.cancel)} onClick={resetForm}>\r\n                    Отмена\r\n                </p>\r\n                <Button type=\"primary\" size=\"medium\" htmlType={\"submit\"}> Сохранить </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileOrders = () => {\r\n    const {messages} = useSelector(state => state.wsReducer);\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (!lastMessage) {\r\n        return (<Loading/>);\r\n    }\r\n    const {orders} = lastMessage;\r\n    if (orders.length === 0) {\r\n        return (<Loading/>);\r\n    }\r\n    return (\r\n        <div className={clsx(styles.feedPageOrdersWrapper, \"pr-2 ml-15\")}>\r\n            {orders.map((order) => {\r\n                return <OrderInfoCard key={uuid.v4()} order={order} IsShowStatus={true}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ProfilePage() {\r\n    const dispatch = useDispatch();\r\n    const accessToken = getCookie('token');\r\n    React.useEffect(() => {\r\n        dispatch(wsConnectionStart(ordersBaseUrl + `?token=${accessToken}`));\r\n        return () => {\r\n            dispatch(wsConnectionClosed());\r\n        }\r\n    }, [dispatch, accessToken])\r\n    const isFeedOrders: boolean = !!useRouteMatch(\"/profile/orders\");\r\n    const innerText = isFeedOrders ?\r\n        `В этом разделе вы можете просмотреть свою историю заказов`\r\n        : `В этом разделе вы можете изменить свои персональные данные`;\r\n    return (\r\n        <main className={clsx(styles.wrapper, \"mt-30\")}>\r\n            <section className={styles.sectionWrapper}>\r\n                <ProfileNav/>\r\n                <div className={\"mt-20 text_type_main-small text_color_inactive\"}>\r\n                    {innerText}\r\n                </div>\r\n            </section>\r\n            {!isFeedOrders && <ProfileData/>}\r\n            {isFeedOrders && <ProfileOrders/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProfilePage);\r\n","export const INGREDIENTS_REQUEST: 'INGREDIENTS_REQUEST' = 'INGREDIENTS_REQUEST';\r\nexport const INGREDIENTS_SUCCESS: 'INGREDIENTS_SUCCESS' = 'INGREDIENTS_SUCCESS';\r\nexport const INGREDIENTS_ERROR: 'INGREDIENTS_ERROR' = 'INGREDIENTS_ERROR';","import React, {FC} from \"react\";\r\nimport styles from './feed-page.module.css';\r\nimport clsx from \"clsx\";\r\nimport * as uuid from \"uuid\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport OrderInfoCard from \"../../components/order-info/order-info\";\r\nimport Loading from \"../../components/loading/loading\";\r\nimport {wsConnectionClosed, wsConnectionStart} from \"../../services/actions/webSocket\";\r\nimport {ordersBaseUrl} from \"../../utils/baseUrl\";\r\n\r\nconst FeedPage: FC<{}> = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    React.useEffect(() => {\r\n        dispatch(wsConnectionStart(ordersBaseUrl + `/all`));\r\n        return () => {\r\n            dispatch(wsConnectionClosed());\r\n        }\r\n    }, [dispatch])\r\n    const {messages} = useSelector(state => state.wsReducer);\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (!lastMessage) {\r\n        return (<Loading/>);\r\n    }\r\n    const {orders, total, totalToday} = lastMessage;\r\n    const pending = orders.filter(order => (order.status === 'pending' || order.status === 'created'));\r\n    const ready =  orders.filter(order => order.status === 'done');\r\n\r\n    const needBigContainerPending = pending.length > 9;\r\n    const needBigContainerReady = ready.length > 9;\r\n\r\n    if (orders.length === 0) {\r\n        return (<Loading/>);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.feedPage}>\r\n            <h1 className=\"text text_type_main-large mt-10\">Лента заказов</h1>\r\n            <div className={clsx(\"mt-5\", styles.feedPageContainer)}>\r\n                <div className={clsx(styles.feedPageOrdersWrapper, \"pr-2\")}>\r\n                    {\r\n                        orders.map((order) => {\r\n                        return <OrderInfoCard key={uuid.v4()} order={order} IsShowStatus={false}/>\r\n                    })}\r\n                </div>\r\n                <div className={\"ml-15\"}>\r\n                    <div className={clsx(styles.feedPageOrderStatusWrapper, \"mb-15\")}>\r\n                        <div className={clsx(\"mr-9\")}>\r\n                            <p className={\"text text_type_main-small mb-6\"}>Готовы:</p>\r\n                            <div className={clsx(styles.feedPageStatusContainer,\r\n                                needBigContainerReady && styles.feedPageStatusContainerBig)}>\r\n                                {\r\n                                    ready.map((item) => {\r\n                                    return (\r\n                                        <p key={uuid.v4()}\r\n                                           className={clsx(styles.orderNumber, \"text text_type_digits-default mb-2\")}>\r\n                                            {item.number}\r\n                                        </p>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className={\"text text_type_main-small mb-6\"}>В работе:</p>\r\n                            <div className={clsx(styles.feedPageStatusContainer,\r\n                                needBigContainerPending && styles.feedPageStatusContainerBig)}>\r\n                                {\r\n                                    pending.map((item) => {\r\n                                    return (\r\n                                        <p key={uuid.v4()}\r\n                                           className=\"text text_type_digits-default mb-2\">\r\n                                            {item.number}\r\n                                        </p>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"text text_type_main-small mb-15\">Выполнено за все время:<br/>\r\n                        <span className={clsx(styles.numberColor, \"text text_type_digits-large\")}>{total}</span>\r\n                    </p>\r\n                    <p className=\"text text_type_main-small\">Выполнено за сегодня:<br/>\r\n                        <span className={clsx(styles.numberColor, \"text text_type_digits-large\")}>{totalToday}</span>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FeedPage;","export const SET_ORDERS: 'SET_ORDERS' = 'SET_ORDERS';\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_ERROR: 'GET_ORDER_ERROR' = 'GET_ORDER_ERROR';\r\nexport const DELETE_ORDERS: 'DELETE_ORDERS' = 'DELETE_ORDERS';","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport Loading from \"../loading/loading\";\r\nimport Error from \"../error/error\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {getOrderInfoDetails} from \"../../services/actions/feed\";\r\nimport styles from './order-info-details.module.css'\r\nimport {IIngredient} from \"../../utils/type\";\r\nimport { IIngredientCard } from \"../burger-ingredients/burger-ingredients\";\r\nimport * as uuid from \"uuid\";\r\n\r\nfunction OrderInfoDetails() {\r\n    /** Получение списка всех заказов и данных об ингредиентах*/\r\n    const {ingredients, isIngredientsLoading, isIngredientsFailed} = useSelector(state => state.burgerIngredient);\r\n    const {orderSelected} = useSelector(state => state.feed)\r\n    const {id}: { id: string } = useParams<{ id: string }>();\r\n    const dispatch = useDispatch();\r\n    React.useEffect(() => {\r\n        dispatch(getOrderInfoDetails(id))\r\n    }, [dispatch, id])\r\n    let sum = 0;\r\n    let allIngredientsInOrder: Array<IIngredient> = [];\r\n    let uniqueIngredientsInOrder: Array<IIngredientCard> = [];\r\n    if (orderSelected) {\r\n        orderSelected.ingredients.map((item) => {\r\n            const ingredient = ingredients.find(ingredient => ingredient._id === item);\r\n            if (ingredient) {\r\n                allIngredientsInOrder.push(ingredient);\r\n                sum += ingredient.price;\r\n            }\r\n            return ingredient;\r\n        });\r\n    }\r\n    allIngredientsInOrder.map((data) => {\r\n        if (!uniqueIngredientsInOrder.find(value => data._id === value.item._id)) {\r\n            uniqueIngredientsInOrder.push({item: data, count: allIngredientsInOrder\r\n                    .filter(item => item._id === data._id).length});\r\n        }\r\n        return data;\r\n    });\r\n    if (!orderSelected) {\r\n        return (<Loading/>);\r\n    }\r\n    let status: string = '';\r\n    switch (orderSelected.status) {\r\n        case \"created\": {\r\n            status = 'Создан';\r\n            break;\r\n        }\r\n        case \"done\": {\r\n            status = 'Выполнен';\r\n            break;\r\n        }\r\n        case \"pending\": {\r\n            status = 'Готовится';\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (isIngredientsLoading || ingredients.length < 1) {\r\n        return (<Loading/>);\r\n    }\r\n    if (isIngredientsFailed) {\r\n        return (<Error/>);\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(\"pl-6 pr-6 pb-6 mt-10\")}>\r\n            <p className=\"text text_type_main-medium mb-3\">{orderSelected.name}</p>\r\n            <p className={clsx(\"text text_type_main-default mb-15\",\r\n                orderSelected.status === \"done\" && styles.statusColor)}>{status}</p>\r\n            <p className=\"text text_type_main-medium mb-6\">Состав:</p>\r\n            <div className={clsx(styles.ingredientInfoContainerWrapper, \"mb-10\")} >\r\n                {\r\n                    uniqueIngredientsInOrder.map((ingredient) => {\r\n                        return (\r\n                            <div key={uuid.v4()} className={clsx(styles.ingredientInfoContainer, \"mb-4\")}>\r\n                                <div className={styles.infoSum}>\r\n                                    <div className={styles.ingredientImageWrapper}>\r\n                                        <img src={ingredient.item.image_mobile}\r\n                                             className={styles.ingredientImage}\r\n                                             alt={\"Картинка\"}\r\n                                        />\r\n                                    </div>\r\n                                    <p className={\"text text_type_main-default ml-4\"}>\r\n                                        {ingredient.item.name}\r\n                                    </p>\r\n                                </div>\r\n                                <div className={styles.infoSum}>\r\n                                    <p className={clsx(styles.infoSum, \"ml-4 mr-6\")}>\r\n                                        <span className={\"text text_type_digits-default mr-2\"}>\r\n                                            {ingredient.count} X {ingredient.item.price}\r\n                                        </span>\r\n                                        <CurrencyIcon type={\"primary\"}/>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n\r\n            <div className={styles.infoCreateAnsSum}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                    {new Date(orderSelected.createdAt).toLocaleString()}\r\n                </p>\r\n                <p className={clsx(styles.infoSum, \"text text_type_digits-default\")}>\r\n                    <span className={\"mr-2\"}>{sum}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderInfoDetails;","import {IOrderFeed} from \"../../utils/type\";\r\nimport {\r\n    GET_ORDER_ERROR,\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n} from \"../constants/feed\";\r\nimport {AppDispatch, AppThunk} from \"../../index\";\r\nimport {getOrderInfo} from \"../../utils/api\";\r\n\r\n\r\nexport interface ISetOrderRequestAction {\r\n    readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\nexport interface ISetOrderAction {\r\n    readonly type: typeof GET_ORDER_SUCCESS;\r\n    readonly data: Array<IOrderFeed>\r\n}\r\nexport interface ISetOrderErrorAction {\r\n    readonly type: typeof GET_ORDER_ERROR;\r\n}\r\n\r\nexport type TFeedActions =\r\n    | ISetOrderRequestAction\r\n    | ISetOrderAction\r\n    | ISetOrderErrorAction;\r\n\r\nexport const getOrderInfoDetails: AppThunk = (number: number) => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: GET_ORDER_REQUEST\r\n    });\r\n    getOrderInfo(number).then(res => {\r\n        if (res instanceof Error) {\r\n            dispatch({\r\n                type: GET_ORDER_ERROR\r\n            });\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: GET_ORDER_SUCCESS,\r\n                data: res.orders\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_ORDER_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: GET_ORDER_ERROR\r\n        });\r\n    });\r\n}","import React from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport {Switch, Route, useLocation, useRouteMatch, useHistory} from 'react-router-dom';\r\nimport HomePage from \"../../pages/home/home\";\r\nimport LoginPage from \"../../pages/login/login\";\r\nimport RegistrationPage from \"../../pages/registration/registration\";\r\nimport PasswordResetPage from \"../../pages/reset-password/reset-password\";\r\nimport ProtectedRoute from \"../protected-route\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password/forgot-password\";\r\nimport ProfilePage from \"../../pages/profile/profile\";\r\nimport {getCookie} from \"../../utils/cookie\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport styles from '../modal/modal.module.css';\r\nimport clsx from \"clsx\";\r\nimport {getUser} from \"../../services/actions/auth\";\r\nimport {History, Location} from \"history\";\r\nimport {getIngredients} from \"../../services/actions/ingredients\";\r\nimport FeedPage from \"../../pages/feed/feed-page\";\r\nimport OrderInfoDetails from \"../order-info-details/order-info-details\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\nconst Main = () => {\r\n    const location: Location = useLocation();\r\n    const history: History = useHistory();\r\n    const background: Location = location.state && (location.state as any).background;\r\n    let id: string = ``;\r\n    let matchProfile = useRouteMatch<MatchParams>(\"/profile/orders/:id\");\r\n    if (matchProfile) {\r\n        id = matchProfile.params.id;\r\n    }\r\n    let matchFeed = useRouteMatch<MatchParams>(\"/feed/:id\");\r\n    if (matchFeed) {\r\n        id = matchFeed.params.id\r\n    }\r\n    const handleClose = (): void => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Switch location={background || location}>\r\n                <Route exact={true} path=\"/\">\r\n                    <HomePage/>\r\n                </Route>\r\n                <Route path=\"/ingredients/:id\">\r\n                    <div className={clsx(styles.modalCenter, \"mt-30\")}>\r\n                        <span className={clsx(\"text_type_main-large\", styles.modalHeader)}> Детали ингредиента</span>\r\n                        <IngredientDetails/>\r\n                    </div>\r\n                </Route>\r\n                <Route path=\"/feed/:id\">\r\n                    <div className={clsx(styles.modalCenterOrderInfo )}>\r\n                        <span className={clsx(\"text_type_main-medium\")}>#{id}</span>\r\n                        <OrderInfoDetails/>\r\n                    </div>\r\n                </Route>\r\n                <Route path=\"/feed\">\r\n                    <FeedPage/>\r\n                </Route>\r\n                <ProtectedRoute path=\"/login\">\r\n                    <LoginPage/>\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path=\"/register\">\r\n                    <RegistrationPage/>\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path=\"/forgot-password\">\r\n                    <ForgotPasswordPage/>\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path=\"/reset-password\">\r\n                    <PasswordResetPage/>\r\n                </ProtectedRoute>\r\n                <ProtectedRoute isForAuthUser={true} path=\"/profile/orders/:id\">\r\n                    <div className={clsx(styles.modalCenterOrderInfo )}>\r\n                        <span className={clsx(\"text_type_main-medium\")}>#{id}</span>\r\n                        <OrderInfoDetails/>\r\n                    </div>\r\n                </ProtectedRoute>\r\n                <ProtectedRoute isForAuthUser={true} path=\"/profile\">\r\n                    <ProfilePage/>\r\n                </ProtectedRoute>\r\n            </Switch>\r\n            {\r\n                background && (<Route path=\"/ingredients/:id\">\r\n                    <Modal caption={\"Детали ингредиента\"} onClose={handleClose}><IngredientDetails/></Modal>\r\n                </Route>)\r\n            }\r\n            {\r\n                background && (<Route path=\"/feed/:id\">\r\n                    <Modal caption={`#${id}`} onClose={handleClose}><OrderInfoDetails/></Modal>\r\n                </Route>)\r\n            }\r\n            {\r\n                background && (<Route path=\"/profile/orders/:id\">\r\n                    <Modal caption={`#${id}`} onClose={handleClose}><OrderInfoDetails/></Modal>\r\n                </Route>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction App() {\r\n    /** Получение данных об авторизации */\r\n    const dispatch = useDispatch();\r\n    const {isAuth, isUserLoading, isUserRequestFailed} = useSelector(state => state.user);\r\n    if (!isAuth && getCookie(\"token\")) {\r\n        if (!isUserLoading && !isUserRequestFailed) dispatch(getUser());\r\n    }\r\n    React.useEffect(() => {\r\n        dispatch(getIngredients());\r\n    }, [dispatch])\r\n    return (\r\n        <React.Fragment>\r\n            <AppHeader/>\r\n            <Main/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {TWebSocketActions, TWSActions} from \"./actions/webSocket\";\r\nimport {TFeedOrdersWS} from \"../utils/type\";\r\nimport { Middleware, MiddlewareAPI } from 'redux';\r\nimport {AppDispatch, RootState } from '..';\r\n\r\nexport const socketMiddleware = (wsActions: TWSActions): Middleware => {\r\n    return (store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n        let socket: WebSocket;\r\n        return (next: any) => (action: TWebSocketActions) => {\r\n            const { dispatch} = store;\r\n            const { type, payload } = action;\r\n            const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n            if (type === wsInit) {\r\n                socket = new WebSocket(payload);\r\n            }\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({type: onOpen, payload: event});\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({type: onError, payload: event});\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    const { data } = event;\r\n                    const parsedData: TFeedOrdersWS = JSON.parse(data);\r\n                    if (parsedData.success) {\r\n                        const { success, ...restParsedData } = parsedData;\r\n                        dispatch({ type: onMessage, payload: restParsedData });\r\n                    }\r\n                };\r\n                socket.onclose = event => {\r\n                    dispatch({type: onClose, payload: event});\r\n                };\r\n                if (type === wsSendMessage) {\r\n                    const message = { ...payload };\r\n                    socket.send(JSON.stringify(message));\r\n                }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};","import {getBurgerData} from \"../../utils/api\";\r\nimport {INGREDIENTS_REQUEST, INGREDIENTS_SUCCESS, INGREDIENTS_ERROR} from '../constants/ingredients'\r\nimport {IIngredient} from \"../../utils/type\";\r\nimport {AppDispatch, AppThunk} from \"../../index\";\r\n\r\nexport interface IIngredientsRequestAction {\r\n    readonly type: typeof INGREDIENTS_REQUEST;\r\n}\r\n\r\nexport interface IIngredientsSuccessAction {\r\n    readonly type: typeof INGREDIENTS_SUCCESS;\r\n    readonly items: Array<IIngredient>\r\n}\r\n\r\nexport interface IIngredientsErrorAction {\r\n    readonly type: typeof INGREDIENTS_ERROR;\r\n}\r\n\r\nexport type TIngredientsActions =\r\n    | IIngredientsRequestAction\r\n    | IIngredientsSuccessAction\r\n    | IIngredientsErrorAction;\r\n\r\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({\r\n        type: INGREDIENTS_REQUEST\r\n    });\r\n    getBurgerData().then(res => {\r\n        if (res instanceof Error) {\r\n            return;\r\n        }\r\n        if (res && res.success) {\r\n            dispatch({\r\n                type: INGREDIENTS_SUCCESS,\r\n                items: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: INGREDIENTS_ERROR\r\n            });\r\n        }\r\n    }).catch(e => {\r\n        dispatch({\r\n            type: INGREDIENTS_ERROR\r\n        });\r\n    });\r\n}\r\n","import {\r\n    ADD_INGREDIENT, CREATE_ORDER_ERROR, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, DEFAULT,\r\n    DELETE_INGREDIENT,\r\n    DELETE_ORDER, REORDER, REPLACE_BUN\r\n} from \"../../constants/order-constructor\";\r\nimport {TConstructorActions} from \"../../actions/constructor\";\r\nimport {IOrderItem} from \"../../../utils/type\";\r\n\r\n/** Работа с заказом */\r\ntype TOrderConstructor = {\r\n    order: number | null,\r\n    orderRequest: boolean,\r\n    orderFailed: boolean,\r\n    content: Array<IOrderItem>\r\n};\r\nconst initialStateOrder: TOrderConstructor = {\r\n    order: null,\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n    content: []\r\n}\r\n\r\nexport const order = (state = initialStateOrder, action: TConstructorActions) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true\r\n            };\r\n        }\r\n        case CREATE_ORDER_SUCCESS: {\r\n            return { ...state, orderFailed: false, order: action.order, orderRequest: false };\r\n        }\r\n        case CREATE_ORDER_ERROR: {\r\n            return { ...state, orderFailed: true, orderRequest: false };\r\n        }\r\n        case DELETE_ORDER: {\r\n            return {...state, order: null, content: []};\r\n        }\r\n        case ADD_INGREDIENT: {\r\n            let arr = [...state.content];\r\n            arr.push({ingredient: action.item, order: arr.length + 1});\r\n            return { ...state, content: arr};\r\n        }\r\n        case REORDER: {\r\n            let arr = [...state.content];\r\n            const indexFrom = arr.findIndex(item => item.order === action.from);\r\n            if (action.from >  action.to) {\r\n                arr.map((item) => {\r\n                    return item.order >= action.to ?\r\n                        item.order !== action.from ? ++item.order : item.order : item.order;\r\n                })\r\n                arr[indexFrom] = {...arr[indexFrom], order: action.to};\r\n            } else {\r\n                arr.map((item) => {\r\n                    return item.order <= action.to ?\r\n                        item.order !== action.from ? --item.order : item.order : item.order;\r\n                })\r\n                arr[indexFrom] = {...arr[indexFrom], order: action.to};\r\n            }\r\n            return { ...state, content: arr};\r\n        }\r\n        case REPLACE_BUN: {\r\n            let arr = [...state.content].filter(item => item.order !== 1 && item.order !== 2);\r\n            arr.push({ingredient: action.item, order: 1});\r\n            arr.push({ingredient: action.item, order: 2});\r\n            return { ...state, content: arr};\r\n        }\r\n        case DELETE_INGREDIENT: {\r\n            let arr = [...state.content];\r\n            arr = arr.filter(item => item.order !== action.order);\r\n            arr.map((item) => {\r\n                return item.order > action.order ? --item.order : item.order;\r\n            })\r\n            return { ...state, content: arr};\r\n        }\r\n        case DEFAULT:\r\n        default: return state;\r\n    }\r\n}","import {\r\n    EMAIL_ERROR, EMAIL_REQUEST, EMAIL_SUCCESS, RESET_PASSWORD_ERROR, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS,\r\n    USER_LOGOUT_REQUEST_ERROR,\r\n    USER_LOGOUT_REQUEST_SUCCESS,\r\n    USER_REQUEST_ERROR,\r\n    USER_REQUEST_LOADING, USER_REQUEST_SUCCESS, USER_UPDATE_REQUEST_ERROR\r\n} from \"../../constants/auth\";\r\nimport {TAuthActions, TRecoverPasswordActions} from \"../../actions/auth\";\r\n\r\n/** Данные о пользователе */\r\ntype TUserState = {\r\n    username: string,\r\n    email: string,\r\n    isUserLoading: boolean,\r\n    isUserRequestFailed: boolean,\r\n    isAuth: boolean,\r\n};\r\nconst initialStateUser: TUserState = {\r\n    username: \"\",\r\n    email: \"\",\r\n    isUserLoading: false,\r\n    isUserRequestFailed: false,\r\n    isAuth: false,\r\n}\r\n\r\nexport const user = (state = initialStateUser, action: TAuthActions) => {\r\n    switch (action.type) {\r\n        case USER_REQUEST_LOADING: {\r\n            return {...state, isUserLoading: true};\r\n        }\r\n        case USER_REQUEST_SUCCESS: {\r\n            return {\r\n                username: action.user.name, email: action.user.email,\r\n                isUserLoading: false, isUserRequestFailed: false, isAuth: true\r\n            };\r\n        }\r\n        case USER_REQUEST_ERROR: {\r\n            return {\r\n                ...state, username: \"\", email: \"\",\r\n                isUserLoading: false, isUserRequestFailed: true\r\n            };\r\n        }\r\n        case USER_UPDATE_REQUEST_ERROR:\r\n        case USER_LOGOUT_REQUEST_ERROR: {\r\n            return {...state, isUserRequestFailed: true}\r\n        }\r\n        case USER_LOGOUT_REQUEST_SUCCESS: {\r\n            return initialStateUser;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n/** Восстановление пароля */\r\ntype TResetPassword = {\r\n    isRequestLoading: boolean,\r\n    isRequestFailed: boolean,\r\n    isEmailSend: boolean,\r\n    isPasswordReset: boolean\r\n};\r\nconst initialStateResetPassword: TResetPassword = {\r\n    isRequestLoading: false,\r\n    isRequestFailed: false,\r\n    isEmailSend: false,\r\n    isPasswordReset: false\r\n}\r\nexport const resetPassword = (state = initialStateResetPassword, action: TRecoverPasswordActions) => {\r\n    switch (action.type) {\r\n        case EMAIL_REQUEST:\r\n        case RESET_PASSWORD_REQUEST: {\r\n            return {...state, isRequestLoading: true};\r\n        }\r\n        case EMAIL_ERROR:\r\n        case RESET_PASSWORD_ERROR: {\r\n            return {...state, isRequestFailed: true, isRequestLoading: false};\r\n        }\r\n        case EMAIL_SUCCESS: {\r\n            return {...state, isEmailSend: true, isRequestLoading: false, isRequestFailed: false};\r\n        }\r\n        case RESET_PASSWORD_SUCCESS: {\r\n            return {...state, isPasswordReset: true, isRequestLoading: false, isRequestFailed: false};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {TFeedOrders} from \"../../../utils/type\";\r\nimport {GET_ORDER_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS} from '../../constants/feed'\r\nimport {TFeedActions} from \"../../actions/feed\";\r\n\r\n/** редьюсер для загрузки данных */\r\nconst initialState: TFeedOrders = {\r\n    isLoading: false,\r\n    isError: false,\r\n    orderSelected: null\r\n}\r\n\r\nexport const feed = (state = initialState, action: TFeedActions) => {\r\n    switch (action.type) {\r\n        case GET_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        }\r\n        case GET_ORDER_ERROR: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true\r\n            }\r\n        }\r\n        case GET_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: false,\r\n                orderSelected: action.data[0]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import {TWebSocketActions} from \"../../actions/webSocket\";\r\nimport {\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE\r\n} from \"../../constants/webSocket\";\r\nimport {TFeedOrdersData} from \"../../../utils/type\";\r\n\r\ntype TWSState = {\r\n    wsConnected: boolean;\r\n    messages: Array<TFeedOrdersData>;\r\n};\r\nconst initialState: TWSState = {\r\n    wsConnected: false,\r\n    messages: []\r\n};\r\n\r\nexport const wsReducer = (state = initialState, action: TWebSocketActions) => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wsConnected: true\r\n            };\r\n\r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                messages: [],\r\n            };\r\n\r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                messages: [],\r\n            };\r\n\r\n        case WS_GET_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages:  [...state.messages, { ...action.payload }]\r\n            };\r\n        }\r\n\r\n        case WS_SEND_MESSAGE:\r\n        default:\r\n            return state;\r\n    }\r\n};","import {TModalAction} from \"../../actions/modal\";\r\nimport {DELETE_TYPE, DELETE_VISIBLE, SET_TYPE, SET_VISIBLE} from \"../../constants/modal\";\r\n\r\n/** редьюсер для работы с модальным окном */\r\ntype TModal = {\r\n    isVisible: boolean,\r\n    typeModal: string;\r\n};\r\nconst initialStateModal: TModal = {\r\n    isVisible: false,\r\n    typeModal: ``,\r\n}\r\nexport const modal = (state = initialStateModal, action: TModalAction) => {\r\n    switch (action.type) {\r\n        case SET_VISIBLE: {\r\n            return { ...state, isVisible: true };\r\n        }\r\n        case DELETE_VISIBLE: {\r\n            return { ...state, isVisible: false };\r\n        }\r\n        case SET_TYPE: {\r\n            return {...state, typeModal: action.typeModal};\r\n        }\r\n        case DELETE_TYPE: {\r\n            return {...state, typeModal: ``};\r\n        }\r\n        default: return state;\r\n    }\r\n}","import {INGREDIENTS_REQUEST, INGREDIENTS_SUCCESS, INGREDIENTS_ERROR} from '../../constants/ingredients';\r\nimport {TIngredientsActions} from \"../../actions/ingredients\";\r\nimport { IIngredient } from '../../../utils/type';\r\n\r\n/** редьюсер для загрузки данных */\r\ntype TIngredients = {\r\n    ingredients: Array<IIngredient>,\r\n    isIngredientsLoading: boolean,\r\n    isIngredientsFailed: boolean,\r\n};\r\nconst initialState: TIngredients = {\r\n    ingredients: [],\r\n    isIngredientsLoading: false,\r\n    isIngredientsFailed: false,\r\n}\r\nexport const burgerIngredient = (state = initialState, action: TIngredientsActions) => {\r\n    switch (action.type) {\r\n        case INGREDIENTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isIngredientsLoading: true\r\n            };\r\n        }\r\n        case INGREDIENTS_SUCCESS: {\r\n            return { ...state, isIngredientsFailed: false, ingredients: action.items, isIngredientsLoading: false };\r\n        }\r\n        case INGREDIENTS_ERROR: {\r\n            return { ...state, isIngredientsFailed: true, isIngredientsLoading: false };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport {order} from \"./constructor/order-constructor\";\r\nimport {user, resetPassword} from './auth/auth'\r\nimport {feed} from \"./feed/feed\";\r\nimport {wsReducer} from \"./ws/wsState\";\r\nimport {modal} from \"./modal/modal\";\r\nimport {burgerIngredient} from \"./burger/burger\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    burgerIngredient,\r\n    modal,\r\n    order,\r\n    user,\r\n    resetPassword,\r\n    feed,\r\n    wsReducer\r\n})\r\n","import React from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport { render } from \"react-dom\";\r\nimport App from './components/app/app';\r\nimport { Provider } from 'react-redux';\r\nimport {rootReducer} from './services/reducers'\r\nimport {applyMiddleware, compose, createStore} from \"@reduxjs/toolkit\";\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\nimport {TAuthActions, TRecoverPasswordActions} from \"./services/actions/auth\";\r\nimport {TConstructorActions} from \"./services/actions/constructor\";\r\nimport {TIngredientsActions} from \"./services/actions/ingredients\";\r\nimport {TModalAction} from \"./services/actions/modal\";\r\nimport { Action, ActionCreator, Dispatch } from 'redux';\r\nimport { socketMiddleware } from './services/wsSocketMiddleware';\r\nimport {TFeedActions} from \"./services/actions/feed\";\r\nimport {TWebSocketActions, TWSActions} from './services/actions/webSocket';\r\nimport {\r\n    WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS, WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE\r\n} from \"./services/constants/webSocket\";\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst wsActions: TWSActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    wsSendMessage: WS_SEND_MESSAGE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    onMessage: WS_GET_MESSAGE\r\n};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions)));\r\nconst store = createStore(rootReducer, enhancer);\r\nexport type RootState = ReturnType<typeof store.getState>;\r\ntype TApplicationActions =\r\n    | TAuthActions\r\n    | TRecoverPasswordActions\r\n    | TConstructorActions\r\n    | TIngredientsActions\r\n    | TModalAction\r\n    | TFeedActions\r\n    | TWebSocketActions;\r\nexport type AppThunk<TReturn = void> = ActionCreator<ThunkAction<TReturn, Action, RootState, TApplicationActions>>;\r\nexport type AppDispatch = Dispatch<TApplicationActions>;\r\n\r\n\r\nconst root = document.getElementById(\"root\");\r\nrender(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>, root);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-info_card__o7Ple\",\"cardInfo\":\"order-info_cardInfo__PG3k-\",\"ingredientsWrapper\":\"order-info_ingredientsWrapper__2ARcp\",\"ingredientsInfoWrapper\":\"order-info_ingredientsInfoWrapper__2JQGM\",\"ingredientsImageRowContainer\":\"order-info_ingredientsImageRowContainer__2wT9T\",\"ingredientTransformImageWrapper\":\"order-info_ingredientTransformImageWrapper__1TNC-\",\"ingredientImageWrapper\":\"order-info_ingredientImageWrapper__1TzWU\",\"ingredientImageFirstCounter\":\"order-info_ingredientImageFirstCounter__3Pw43\",\"ingredientImage\":\"order-info_ingredientImage__2GEkG\",\"ingredientsLeftCounter\":\"order-info_ingredientsLeftCounter__3R139\",\"statusDone\":\"order-info_statusDone__2jCuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedPage\":\"feed-page_feedPage__1m_l4\",\"feedPageContainer\":\"feed-page_feedPageContainer__2HNvk\",\"numberColor\":\"feed-page_numberColor__2LSuU\",\"feedPageOrderStatusWrapper\":\"feed-page_feedPageOrderStatusWrapper__uJnGF\",\"feedPageStatusContainer\":\"feed-page_feedPageStatusContainer__3IegJ\",\"feedPageStatusContainerBig\":\"feed-page_feedPageStatusContainerBig__1zVX0\",\"orderNumber\":\"feed-page_orderNumber__2S3iz\",\"feedPageOrdersWrapper\":\"feed-page_feedPageOrdersWrapper__3232p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusColor\":\"order-info-details_statusColor__2fDKD\",\"infoCreateAnsSum\":\"order-info-details_infoCreateAnsSum__bbKO_\",\"infoSum\":\"order-info-details_infoSum__3EqCf\",\"ingredientInfoContainerWrapper\":\"order-info-details_ingredientInfoContainerWrapper__1R0r0\",\"ingredientInfoContainer\":\"order-info-details_ingredientInfoContainer__2iI0l\",\"ingredientImageWrapper\":\"order-info-details_ingredientImageWrapper__15xlT\",\"ingredientImage\":\"order-info-details_ingredientImage__2tI4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__twR_X\",\"menuContainer\":\"burger-ingredients_menuContainer__2DcL0\",\"navLink\":\"burger-ingredients_navLink__OY3fx\",\"ingredientsSectionWrapper\":\"burger-ingredients_ingredientsSectionWrapper__33EO3\",\"ingredientsSectionCaption\":\"burger-ingredients_ingredientsSectionCaption__28Pg5\",\"ingredientsSectionP\":\"burger-ingredients_ingredientsSectionP__17Dln\",\"ingredientsSectionImage\":\"burger-ingredients_ingredientsSectionImage__pVwg1\",\"tab\":\"burger-ingredients_tab__3NPmS\",\"ingredientsSectionContainer\":\"burger-ingredients_ingredientsSectionContainer__37PKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__3ZfQC\",\"menuContainer\":\"burger-constructor_menuContainer__1PEYp\",\"container\":\"burger-constructor_container__1On2c\",\"itemCard\":\"burger-constructor_itemCard__2ms_V\",\"finalContainer\":\"burger-constructor_finalContainer__3zqoc\",\"canDrop\":\"burger-constructor_canDrop__2PJtb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"profile-nav_active__1f9xN\",\"linkBlock\":\"profile-nav_linkBlock__AB_e3\",\"link\":\"profile-nav_link__3n9pV\",\"logout\":\"profile-nav_logout__29Pex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__jRqX6\",\"modalHeader\":\"modal_modalHeader__r7ajC\",\"modalCenter\":\"modal_modalCenter__3KXbh\",\"modalCenterOrderInfo\":\"modal_modalCenterOrderInfo__31PX-\",\"modalCloseIconAlign\":\"modal_modalCloseIconAlign__MAWsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__1EFWG\",\"header\":\"login_header__3zkuU\",\"text\":\"login_text__1bb-h\",\"link\":\"login_link__Iu81K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"ingredient-details_detailsContainer__XTnug\",\"caloriesInfoContainer\":\"ingredient-details_caloriesInfoContainer__OmmQE\",\"infoP\":\"ingredient-details_infoP__gkh8H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__1q84-\",\"submitContainer\":\"profile_submitContainer__2_nX-\",\"cancel\":\"profile_cancel__3yK6d\",\"sectionWrapper\":\"profile_sectionWrapper__2Et6_\",\"feedPageOrdersWrapper\":\"profile_feedPageOrdersWrapper__3yT6u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingWindow\":\"loading_loadingWindow__2V4Ht\",\"loadingIcon\":\"loading_loadingIcon__1Y4fA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"registration_wrapper__3Z0lU\",\"header\":\"registration_header__zXkJb\",\"text\":\"registration_text__6Z4vo\",\"link\":\"registration_link__A4Bgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reset-password_wrapper__1Kty0\",\"header\":\"reset-password_header__j3wV7\",\"text\":\"reset-password_text__yjdVt\",\"link\":\"reset-password_link__1500i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password_wrapper__2Mcpj\",\"header\":\"forgot-password_header__3Q9-i\",\"text\":\"forgot-password_text__2niNw\",\"link\":\"forgot-password_link__11ugV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"order-details_detailsContainer__1l2DR\",\"orderNumber\":\"order-details_orderNumber__1PNKy\"};"],"sourceRoot":""}